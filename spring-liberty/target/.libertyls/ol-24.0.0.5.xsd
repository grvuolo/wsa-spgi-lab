<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ext="http://www.ibm.com/xmlns/dde/schema/annotation/ext">
    <xsd:complexType name="com.ibm.ws.app.management">
        <xsd:annotation>
            <xsd:documentation>Properties that control the behavior of the application manager</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Application Manager</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="false" name="autoExpand" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables automatic extraction of WAR files and EAR files</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Automatically expand applications</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="useJandex" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use Jandex</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="30s" name="startTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies how long the server waits for an application to start before it considers it slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Start timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="30s" name="stopTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies how long the server waits for an application to stop before it considers it slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Stop timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="${server.config.dir}/apps/expanded/" name="expandLocation" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>The expandLocation attribute enables a user to set the location where the autoExpanded application is located. The default location is ${server.config.dir}/apps/expanded/.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Expand location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.monitor">
        <xsd:annotation>
            <xsd:documentation>Defines how the server responds to application additions, updates, and deletions.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Application Monitoring</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="500ms" name="pollingRate" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Rate at which the server checks for application additions, updates, and deletions. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Application update polling rate</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="dropins" name="dropins" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>Location of the application drop-in directory expressed as an absolute path or a path relative to the server directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Application drop-in directory</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="dropinsEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Monitor the drop-in directory for application additions, updates, and deletions.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Monitor application drop-in directory</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="polled" name="updateTrigger" use="optional">
            <xsd:annotation>
                <xsd:documentation>Application update method or trigger.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Application update trigger</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="polled">
                                <xsd:annotation>
                                    <xsd:documentation>Server will scan for application changes at the polling interval and update any applications that have detectable changes.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="mbean">
                                <xsd:annotation>
                                    <xsd:documentation>Server will only update applications when prompted by an MBean called by an external program such as an integrated development environment or a management application.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="disabled">
                                <xsd:annotation>
                                    <xsd:documentation>Disables all update monitoring. Application changes will not be applied while the server is running.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager">
        <xsd:annotation>
            <xsd:documentation>Defines the properties of an application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Application</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="startAfter" type="com.ibm.ws.app.manager-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start After</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader">
                <xsd:annotation>
                    <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Classloader</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"/>
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"/>
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"/>
            <xsd:element name="web-ext" type="com.ibm.ws.javaee.dd.webext.WebExt"/>
            <xsd:element name="application-client-bnd" type="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"/>
            <xsd:element name="web-bnd" type="com.ibm.ws.javaee.dd.webbnd.WebBnd"/>
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"/>
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"/>
        </xsd:choice>
        <xsd:attribute name="location" type="location" use="required">
            <xsd:annotation>
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Type of application archive.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Application type</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="context-root" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Context root of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Application context root</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="autoStart" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Automatically start</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="useJandex" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use Jandex</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startAfterRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Start after</ext:label>
                    <ext:reference>application</ext:reference>
                    <ext:reference>webApplication</ext:reference>
                    <ext:reference>enterpriseApplication</ext:reference>
                    <ext:reference>springBootApplication</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="classloaderRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Classloader</ext:label>
                    <ext:reference>classloader</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.app.manager">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.global">
        <xsd:annotation>
            <xsd:documentation>Global classloading</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Classloading</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="false" name="useJarUrls" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Whether to use jar: or wsjar: URLs for referencing files in archives</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use jar: URLs</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.logging.binaryTrace">
        <xsd:annotation>
            <xsd:documentation>Binary trace options.  The binary trace can be viewed using the logViewer command.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Binary Trace</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="50" name="purgeMaxSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum size for the binary trace repository in megabytes.  When the value for purgeMaxSize is specified with a value of more than 0, cleanup based on repository size is enabled, otherwise it is disabled; a value of 0 means no limit.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum repository size</ext:label>
                    <ext:variable>com.ibm.hpel.trace.purgeMaxSize</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="0" name="purgeMinTime" type="hourDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the duration, in hours, after which a server can remove a trace record.  When the value for purgeMinTime is specified with a value of more than 0, cleanup based on trace record age is enabled, otherwise it is disabled; a value of 0 means no limit. Specify a positive integer followed by the unit of time, which can be hours (h). For example, specify 12 hours as 12h.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Minimum retention time</ext:label>
                    <ext:variable>com.ibm.hpel.trace.purgeMinTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="fileSwitchTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>Makes the server close the active trace file and start a new one at the specified hour of the day.  When the value for fileSwitchTime is specified, file switching is enabled, otherwise it is disabled.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Hour of the day to switch file</ext:label>
                    <ext:variable>com.ibm.hpel.trace.fileSwitchTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                            <xsd:maxInclusive value="23"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="bufferingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether to allow a small delay in saving records to the disk for improved performance.  When bufferingEnabled is set to true, records will be briefly held in memory before being written to disk.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable output buffering</ext:label>
                    <ext:variable>com.ibm.hpel.trace.bufferingEnabled</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="StopLogging" name="outOfSpaceAction" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the action to perform when the file system where records are kept runs out of free space.  When outOfSpaceAction is set to "StopLogging" the server will stop tracing when records are not able to be written to disk.  When this attribute is set to "PurgeOld" the server will attempt to delete the oldest records from the binary trace repository to make space for new records.  When this attribute is set to "StopServer" binary trace will stop the server when records cannot be written.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Action if data can't be stored</ext:label>
                    <ext:variable>com.ibm.hpel.trace.outOfSpaceAction</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="StopServer">
                                <xsd:annotation>
                                    <xsd:documentation>Stop Server</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="PurgeOld">
                                <xsd:annotation>
                                    <xsd:documentation>Remove old records</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="StopLogging">
                                <xsd:annotation>
                                    <xsd:documentation>Stop Logging</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.logging.binaryLog">
        <xsd:annotation>
            <xsd:documentation>Binary logging options.  The binary log can be viewed using the logViewer command.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Binary Log</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="50" name="purgeMaxSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum size for the binary log repository in megabytes.  When the value for purgeMaxSize is specified with a value of more than 0, cleanup based on repository size is enabled, otherwise it is disabled; a value of 0 means no limit.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum repository size</ext:label>
                    <ext:variable>com.ibm.hpel.log.purgeMaxSize</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="0" name="purgeMinTime" type="hourDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the duration, in hours, after which a server can remove a log record.  When the value for purgeMinTime is specified with a value of more than 0, cleanup based on log record age is enabled, otherwise it is disabled; a value of 0 means no limit. Specify a positive integer followed by the unit of time, which can be hours (h). For example, specify 12 hours as 12h.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Minimum retention time</ext:label>
                    <ext:variable>com.ibm.hpel.log.purgeMinTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="fileSwitchTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>Makes the server close the active log file and start a new one at the specified hour of the day.  When the value for fileSwitchTime is specified, file switching is enabled, otherwise it is disabled.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Hour of the day to switch file</ext:label>
                    <ext:variable>com.ibm.hpel.log.fileSwitchTime</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                            <xsd:maxInclusive value="23"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="bufferingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether to allow a small delay in saving records to the disk for improved performance.  When bufferingEnabled is set to true, records will be briefly held in memory before being written to disk.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable output buffering</ext:label>
                    <ext:variable>com.ibm.hpel.log.bufferingEnabled</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="StopLogging" name="outOfSpaceAction" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the action to perform when the file system where records are kept runs out of free space.  When outOfSpaceAction is set to "StopLogging" the server will stop logging when records are not able to be written to disk.  When this attribute is set to "PurgeOld" the server will attempt to delete the oldest records from the binary log repository to make space for new records.  When this attribute is set to "StopServer" the binary log will stop the server when records cannot be written.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Action if data can't be stored</ext:label>
                    <ext:variable>com.ibm.hpel.log.outOfSpaceAction</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="StopServer">
                                <xsd:annotation>
                                    <xsd:documentation>Stop Server</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="PurgeOld">
                                <xsd:annotation>
                                    <xsd:documentation>Remove old records</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="StopLogging">
                                <xsd:annotation>
                                    <xsd:documentation>Stop Logging</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.channelfw">
        <xsd:annotation>
            <xsd:documentation>Defines channel and chain management settings. </xsd:documentation>
            <xsd:appinfo>
                <ext:label>Channel Framework</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="5s" name="chainStartRetryInterval" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Time interval between start retries. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Chain restart interval</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="60" name="chainStartRetryAttempts" use="optional">
            <xsd:annotation>
                <xsd:documentation>Number of retry attempts to make per chain.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Chain restart attempts</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="30s" name="chainQuiesceTimeout" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Default amount of time to wait while quiescing chains. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Quiesce timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="10s" name="warningWaitTime" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Amount of time to wait before notifying of a missing factory configuration. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Warning wait time</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.tcpchannel.options">
        <xsd:annotation>
            <xsd:documentation>Defines TCP protocol settings.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>TCP Options</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="60s" name="inactivityTimeout" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Amount of time to wait for a read or write request to complete on a socket. This value is overridden by protocol-specific timeouts. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Inactivity timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="soReuseAddr" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables immediate rebind to a port with no active listener.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>SO_REUSEADDR socket option</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="addressIncludeList" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of addresses that are allowed to make inbound connections on this endpoint. You can specify IPv4 or IPv6 addresses. All values in an IPv4 or IPv6 address must be represented by a number or by an asterisk wildcard character. As examples, valid IPv4 addresses for this list include "*.1.255.0", "254.*.*.9", and "1.*.*.*", and valid IPv6 addresses include "0:*:*:0:007F:0:0001:0001", "F:FF:FFF:FFFF:1:01:001:0001", and "1234:*:4321:*:9F9f:*:*:0000".</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Address include list</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="addressExcludeList" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of addresses that are not allowed to make inbound connections on this endpoint. You can specify IPv4 or IPv6 addresses. All values in an IPv4 or IPv6 address must be represented by a number or by an asterisk wildcard character. As examples, valid IPv4 addresses for this list include "*.1.255.0", "254.*.*.9", and "1.*.*.*", and valid IPv6 addresses include "0:*:*:0:007F:0:0001:0001", "F:FF:FFF:FFFF:1:01:001:0001", and "1234:*:4321:*:9F9f:*:*:0000".</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Address exclude list</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="hostNameIncludeList" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of host names that are allowed to make inbound connections on this endpoint. Host names are not case-sensitive and can start with an asterisk, which is used as a wildcard character. However, asterisks cannot be elsewhere in the host name. For example, *.abc.com is valid, but *.abc.* is not valid. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Host name include list</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="hostNameExcludeList" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of host names that are not allowed to make inbound connections on this endpoint. Host names are not case-sensitive and can start with an asterisk, which is used as a wildcard character. However, asterisks cannot be elsewhere in the host name. For example, *.abc.com is valid, but *.abc.* is not valid.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Host name exclude list</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0" name="portOpenRetries" use="optional">
            <xsd:annotation>
                <xsd:documentation>Number of retries to open a TCP/IP port during server startup.  There will be a one second delay between retries, until the opening is successful or the port open retry number is reached. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Port open retries</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                            <xsd:maxInclusive value="100000"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="acceptThread" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>If true, then listening ports do not share the same thread for accepting connections. Otherwise, they share the same thread.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Accept thread</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="128000" name="maxOpenConnections" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the maximum number of connections allowed to be open on this endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Max open connections</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="waitToAccept" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Queries whether this TCP Channel will delay accepting connections until the server starts. If false, connections are closed until the server starts. If true, the value for the acceptThread tcpOption is also set to true, and connections are delayed until the server starts.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Wait to accept</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.tcpchannel.options-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.tcpchannel.options">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.classloader">
        <xsd:annotation>
            <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Classloader</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="privateLibrary" type="com.ibm.ws.classloading.sharedlibrary-factory">
                <xsd:annotation>
                    <xsd:documentation>List of library references. Library class instances are unique to this classloader, independent of class instances from other classloaders.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Library</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="commonLibrary" type="com.ibm.ws.classloading.sharedlibrary-factory">
                <xsd:annotation>
                    <xsd:documentation>List of library references. Library class instances are shared with other classloaders.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Shared Library</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute default="parentFirst" name="delegation" use="optional">
            <xsd:annotation>
                <xsd:documentation>Controls whether parent classloader is used before or after this classloader. If parent first is selected then delegate to immediate parent before searching the classpath. If parent last is selected then search the classpath before delegating to the immediate parent.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Delegation</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="parentFirst">
                                <xsd:annotation>
                                    <xsd:documentation>Parent first</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="parentLast">
                                <xsd:annotation>
                                    <xsd:documentation>Parent last</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="privateLibraryRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>List of library references. Library class instances are unique to this classloader, independent of class instances from other classloaders.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Library references</ext:label>
                    <ext:reference>library</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="commonLibraryRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>List of library references. Library class instances are shared with other classloaders.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Shared library references</ext:label>
                    <ext:reference>library</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="spec,ibm-api,api,stable" name="apiTypeVisibility" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The types of API packages that this class loader supports. This value is a comma-separated list of any combination of the following API packages: spec, ibm-api, api, stable, third-party.  If a prefix of pass:[+] or - is added to API types, those API types are added or removed, respectively, from the default set of API types. Common usage for the prefix, pass:[+]third-party, results in "spec, ibm-api, api, stable, third-party". The prefix, -api, results in "spec, ibm-api, stable".</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allowed API types</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.classloader-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.classloading.classloader">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.folder">
        <xsd:annotation>
            <xsd:documentation>Folder containing resources such as .properties and .class files</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Folder</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="dir" type="dirLocation" use="required">
            <xsd:annotation>
                <xsd:documentation>Directory or folder to be included in the library classpath for locating resource files</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Folder</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.folder-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.classloading.sharedlibrary.folder">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.file">
        <xsd:annotation>
            <xsd:documentation>Add a file to be included in this library</xsd:documentation>
            <xsd:appinfo>
                <ext:label>File</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="fileLocation" use="required">
            <xsd:annotation>
                <xsd:documentation>Fully qualified filename</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.file-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.classloading.sharedlibrary.file">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary">
        <xsd:annotation>
            <xsd:documentation>Shared Library</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Shared Library</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="fileset" type="com.ibm.ws.kernel.metatype.helper.fileset-factory">
                <xsd:annotation>
                    <xsd:documentation>Id of referenced Fileset</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Fileset</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="folder" type="com.ibm.ws.classloading.sharedlibrary.folder-factory">
                <xsd:annotation>
                    <xsd:documentation>Id of referenced folder</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Folder</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="file" type="com.ibm.ws.classloading.sharedlibrary.file-factory">
                <xsd:annotation>
                    <xsd:documentation>Id of referenced File</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>File</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of shared library for administrators</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="description" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Description of shared library for administrators</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Description</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="filesetRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Id of referenced Fileset</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Fileset reference</ext:label>
                    <ext:reference>fileset</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="spec,ibm-api,api,stable" name="apiTypeVisibility" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The types of API packages that this class loader supports. This value is a comma-separated list of any combination of the following API packages: spec, ibm-api, api, stable, third-party.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allowed API types</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.classloading.sharedlibrary">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.mimetype">
        <xsd:annotation>
            <xsd:documentation>Definition of mime types shared by all http virtual hosts</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Default Mime Types</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element maxOccurs="5000" minOccurs="0" name="type" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Definition of mime type as id=value. Use the extension as the id, and the associated type as the value.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Mime extension and type</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.dispatcher">
        <xsd:annotation>
            <xsd:documentation>HTTP Dispatcher configuration.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Dispatcher</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element default="*" name="trustedHeaderOrigin" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>The web server plug-in uses private headers to provide information about the original request. These headers take precedence over the HTTP host header and are used to select a virtual host to service a request. The default value is '*', which trusts incoming private headers from any source. To disable private headers and rely only on the http Host header, specify 'none'. To restrict private header processing to specific trusted sources, specify a comma-separated list of IP addresses and hostnames. This list supports '*' wildcards, with the following restrictions: IP addresses cannot be shortened and must contain a value for each field, for example "127.0.0.*" or "0:0:0:0:0:ffff:*:*", and hostnames must start with "*.", for example "*.ibm.com". The following example shows a valid list that includes wildcards: "localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com".</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Trusted private header origin</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element default="none" name="trustedSensitiveHeaderOrigin" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>The web server plug-in uses private headers to provide information about the original request. A subset of these headers is considered sensitive. By default, the value for this property is 'none'. Incoming sensitive private headers are not trusted from any source. To allow sensitive private header processing for specific trusted sources, specify a comma-separated list of IP addresses and hostnames. To trust incoming sensitive private headers from any source, specify '*'. This list supports '*' wildcards, with the following restrictions: IP addresses cannot be shortened and must contain a value for each field, for example "127.0.0.*" or "0:0:0:0:0:ffff:*:*", and hostnames must start with "*.", for example "*.ibm.com". The following example shows a valid list that includes wildcards: "localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com".</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Trusted sensitive private header origin</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute default="true" name="enableWelcomePage" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables the default Liberty profile welcome page when no application is bound to a context root of "/".  The default value is true.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable welcome page</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appOrContextRootMissingMessage" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Message to return to the client when the application in the requested URI can not be found.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Message when application can not be found</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.transport.http.encoding">
        <xsd:annotation>
            <xsd:documentation>HTTP transport encoding settings</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Transport Encoding</ext:label>
                <ext:groupDecl id="Converter" label="Converters">Character set converters</ext:groupDecl>
                <ext:groupDecl id="Encoding" label="Encodings">Language encodings</ext:groupDecl>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="Cp943C" name="converter.Shift_JIS" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Shift_JIS Japanese converter</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Shift_JIS Japanese converter</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Cp33722C" name="converter.EUC-JP" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>EUC Japanese converter (EUC-JP)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>EUC Japanese converter</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Cp970" name="converter.EUC-KR" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>EUC Korean converter (EUC-KR)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>EUC Korean converter (EUC-KR)</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Cp970" name="converter.EUC_KR" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>EUC Korean converter (EUC_KR)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>EUC Korean converter (EUC_KR)</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Cp964" name="converter.EUC-TW" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>EUC Chinese (Taiwan) converter (EUC-TW)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>EUC Chinese (Taiwan) converter</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Cp950" name="converter.Big5" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Big5 Chinese converter</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Big5 Chinese converter</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="EUC_CN" name="converter.GB2312" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>GB2312 Chinese converter</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>GB2312 Chinese converter</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO2022KR" name="converter.ISO-2022-KR" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>ISO-2022 Korean converter (ISO-2022-KR)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>ISO-2022 Korean converter</ext:label>
                    <ext:group id="Converter"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.en" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>English language encoding (en)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>English language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.fr" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>French language encoding (fr)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>French language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.de" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>German language encoding (de)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>German language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.es" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Spanish language encoding (es)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Spanish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.pt" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Portuguese language encoding (pt)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Portuguese language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.da" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Danish language encoding (da)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Danish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.ca" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Catalan language encoding (ca)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Catalan language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.fi" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Finnish language encoding (fi)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Finnish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.it" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Italian language encoding (it)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Italian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.nl" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Dutch language encoding (nl)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Dutch language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.no" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Norwegian language encoding (no)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Norwegian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.sv" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Swedish language encoding (sv)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Swedish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.is" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Icelandic language encoding (is)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Icelandic language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-1" name="encoding.eu" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Basque language encoding (eu)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Basque language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.cs" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Czech language encoding (cs)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Czech language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.hr" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Croatian language encoding (hr)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Croatian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.hu" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Hungarian language encoding (hu)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Hungarian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.lt" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Lithuanian language encoding (lt)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Lithuanian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.pl" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Polish language encoding (pl)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Polish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.sh" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Serbo-Croatian language encoding (sh)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Serbo-Croatian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.sk" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Slovak language encoding (sk)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Slovak language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.sl" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Slovenian language encoding (sl)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Slovenian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.sq" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Albanian language encoding (sq)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Albanian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.fo" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Faroese language encoding (fo)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Faroese language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-2" name="encoding.ro" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Romanian language encoding (ro)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Romanian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-3" name="encoding.mt" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maltese language encoding (mt)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maltese language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-4" name="encoding.et" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Estonian language encoding (et)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Estonian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-4" name="encoding.lv" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Latvian language encoding (lv)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Latvian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-5" name="encoding.be" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Belarusian language encoding (be)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Belarusian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-5" name="encoding.bg" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Bulgarian language encoding (bg)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Bulgarian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-5" name="encoding.mk" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Macedonian language encoding (mk)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Macedonian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-5" name="encoding.ru" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Russian language encoding (ru)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Russian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-5" name="encoding.sr" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Serbian language encoding (sr)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Serbian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-5" name="encoding.uk" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Ukrainian language encoding (uk)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Ukrainian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-6" name="encoding.ar" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Arabic language encoding (ar)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Arabic language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-6" name="encoding.fa" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Persian language encoding (fa)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Persian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-6" name="encoding.ms" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Malay language encoding (ms)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Malay language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-7" name="encoding.el" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Greek language encoding (el)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Greek language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-8" name="encoding.iw" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Hebrew language encoding (iw)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Hebrew language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-8" name="encoding.he" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Hebrew language encoding (he)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Hebrew language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-8" name="encoding.ji" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Yiddish language encoding (ji)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Yiddish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-8" name="encoding.yi" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Yiddish language encoding (yi)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Yiddish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="ISO-8859-9" name="encoding.tr" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Turkish language encoding (tr)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Turkish language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="windows-874" name="encoding.th" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Thai language encoding (th)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Thai language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="windows-1258" name="encoding.vi" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Vietnamese language encoding (vi)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Vietnamese language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Shift_JIS" name="encoding.ja" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Japanese language encoding (ja)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Japanese language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="EUC-KR" name="encoding.ko" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Korean language encoding (ko)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Korean language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="GB2312" name="encoding.zh" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Chinese language encoding (zh)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Chinese language encoding (simplified)</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Big5" name="encoding.zh_TW" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Chinese language encoding (zh_TW)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Chinese language encoding (traditional)</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.hy" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Armenian language encoding (hy)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Armenian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.ka" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Georgian language encoding (ka)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Georgian language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.hi" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Hindi language encoding (hi)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Hindi language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.mr" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Marathi language encoding (mr)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Marathi language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.sa" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Sanskrit language encoding (sa)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Sanskrit language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.ta" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Tamil language encoding (ta)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Tamil language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UTF-8" name="encoding.bn" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Bengali language encoding (bn)</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Bengali language encoding</ext:label>
                    <ext:group id="Encoding"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.log.access">
        <xsd:annotation>
            <xsd:documentation>HTTP access logs contain a record of all inbound HTTP client requests.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Access Logging</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="true" name="enabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables access logging when the accessLogging configuration element is defined. Note: Access logging must be configured for this attribute to take effect.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enabled</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="${server.output.dir}/logs/http_access.log" name="filePath" type="fileLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>Directory path and name of the access log file. Standard variable substitutions, such as ${server.output.dir}, can be used when specifying the directory path.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Log file path</ext:label>
                    <ext:unique>accessLogFilePath</ext:unique>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="%h %u %{t}W &quot;%r&quot; %s %b" name="logFormat" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the log format that is used when logging client access information.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Format</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="20" name="maxFileSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum size of a log file, in megabytes, before being rolled over; a value of 0 means no limit.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum log file size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="2" name="maxFiles" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum number of log files that will be kept, before the oldest file is removed; a value of 0 means no limit.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum log files</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="" name="rolloverStartTime" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The scheduled time of day for logs to first roll over. The rollover interval duration begins at rollover start time. Valid values follow a 24-hour ISO-8601 datetime format of HH:MM, where 00:00 represents midnight. Padding zeros are required. If rolloverInterval is specified, the default value of rolloverStartTime is 00:00, midnight. If both rolloverInterval and rolloverStartTime are unspecified, time based log rollover is disabled.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Rollover start time for time based log rollover</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="rolloverInterval" type="minuteDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>The time interval in between log rollovers, in minutes if a unit of time is not specified. Specify a positive integer followed by a unit of time, which can be days (d), hours (h), or minutes (m). For example, specify 5 hours as 5h. You can include multiple values in a single entry. For example, 1d5h is equivalent to 1 day and 5 hours. If rolloverStartTime is specified, the default value of rolloverInterval is 1 day. If both rolloverInterval and rolloverStartTime are unspecified, time based log rollover is disabled. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Rollover interval for time based log rollover</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.log.access-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.log.access">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.headers">
        <xsd:annotation>
            <xsd:documentation>An element that is configured within the httpEndpoint element so that the associated HTTP channel evaluates response header configurations.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Header Options</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="add" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Specifies the header names and values that are added to each HTTP response. Header values are optionally included by using a colon (:) delimiter. Any header name that is defined by using this attribute must not be empty or present in the 'remove', 'set', or 'setIfMissing' header configurations. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Headers to be added on each response</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="set" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Specifies the header names and values that are set to each HTTP response. Header values are optionally included by using a colon (:) delimiter. Any header name that is defined by using this attribute must not be empty, defined more than once, or present in the 'remove', 'add', or 'setIfEmpty'  header configurations. If the header is already present on the response, existing values are overwritten in favor of this configuration.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Headers to be set on each response</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="setIfMissing" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Specifies the header names and values that are set to each HTTP response if not already present. Header values are optionally included by using a colon (:) delimiter. Any header name that is defined by using this attribute must not be empty, defined more than once, or present in the 'remove', 'add', or 'set' header configurations.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Headers to be set if not present on each response</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="remove" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Specifies the header names that are removed from each HTTP response. Any header name that is defined by using this attribute must not be empty. No header values are expected. Any header name that is defined by using this attribute must not be present in the 'add', 'set', or 'setIfMissing' header configurations.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Headers to be removed from each response</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.headers-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.headers">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.proxyredirect">
        <xsd:annotation>
            <xsd:documentation>Configures port redirection. HTTP Proxy Redirect is used when redirecting HTTP requests from a non-secure port (for example, 80) to an SSL-enabled secured port (for example, 443).</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Proxy Redirect</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="httpPort" use="required">
            <xsd:annotation>
                <xsd:documentation>The (non-secure) port to redirect from. Incoming HTTP requests on this port are redirected to the specified HTTPS port.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>HTTP port</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="httpsPort" use="required">
            <xsd:annotation>
                <xsd:documentation>The (secure) port to redirect to. Incoming HTTP requests that use the HTTP port are redirected to this port.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>HTTPS port</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="enabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>This attribute determines whether or not the server should redirect ports that are specified in this configuration element. The default is true.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enabled</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="*" name="host" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The host name used for this proxy redirect. The server redirects HTTP requests only if the incoming request specifies a host name that matches this value. The default is * (all hosts).</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Host</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.proxyredirect-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.proxyredirect">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.samesite">
        <xsd:annotation>
            <xsd:documentation>An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider SameSite configurations.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>SameSite Options</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="lax" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>List of cookie names or patterns for which the SameSite attribute is set to a value of Lax, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'none' nor 'strict' configurations.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>List of samesite lax cookies</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="none" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>List of cookie names or patterns for which the SameSite attribute is set to a value of None, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'strict' configurations. Each cookie that is modified to contain a SameSite value of None as a result of this configuration is also set to Secure.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>List of samesite none cookies</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="strict" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>List of cookie names or patterns for which the SameSite attribute is set to a value of Strict, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'none' configurations.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>List of samesite strict cookies</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.samesite-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.samesite">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.compression">
        <xsd:annotation>
            <xsd:documentation>An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider compressing response bodies based on the client's Accept-Encoding header.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Compression Options</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element default="text/*" maxOccurs="5000" minOccurs="0" name="types" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>To include a content type in addition to the default values, affix the add (+) character as a prefix to that content type. To exclude a content type from compression, affix the remove (-) character as a prefix to that content type. Note: The wildcard (*) character is supported only as a content subtype, such as text/*.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>List of content types for response compression</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute default="none" name="serverPreferredAlgorithm" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The configured compression algorithm is used to compress the body of responses when it is specified with a non-zero quality value in the request's Accept-Encoding header. The valid compression algorithms include: deflate, gzip, x-gzip, zlib, and identity.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Server-preferred algorithm for compression</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.compression-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.compression">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http">
        <xsd:annotation>
            <xsd:documentation>Configuration properties for an HTTP endpoint.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Endpoint</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="httpOptions" type="com.ibm.ws.http.options">
                <xsd:annotation>
                    <xsd:documentation>HTTP protocol options for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>HTTP Options</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="remoteIp" type="com.ibm.ws.http.remoteip">
                <xsd:annotation>
                    <xsd:documentation>Remote IP options for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Remote IP Options</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="compression" type="com.ibm.ws.http.compression">
                <xsd:annotation>
                    <xsd:documentation>Compression options for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Compression Options</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="samesite" type="com.ibm.ws.http.samesite">
                <xsd:annotation>
                    <xsd:documentation>SameSite options for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>SameSite Options</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="headers" type="com.ibm.ws.http.headers">
                <xsd:annotation>
                    <xsd:documentation>Header options for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Header Options</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options">
                <xsd:annotation>
                    <xsd:documentation>TCP protocol options for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>TCP Options</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="accessLogging" type="com.ibm.ws.http.log.access">
                <xsd:annotation>
                    <xsd:documentation>HTTP access logging configuration for the endpoint.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>HTTP Access Logging</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute default="WARN" name="onError" use="optional">
            <xsd:annotation>
                <xsd:documentation>Action to take after a failure to start an endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>On error</ext:label>
                    <ext:variable>onError</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="WARN">
                                <xsd:annotation>
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="FAIL">
                                <xsd:annotation>
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="enabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle the availability of an endpoint. When true, this endpoint will be activated by the dispatcher to handle HTTP requests.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enabled</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="localhost" name="host" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>IP address, domain name server (DNS) host name with domain name suffix, or just the DNS host name, used by a client to request a resource. Use '*' for all available network interfaces.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Host</ext:label>
                    <ext:variable>defaultHostName</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="httpPort" use="optional">
            <xsd:annotation>
                <xsd:documentation>The port used for client HTTP requests. Use -1 to disable this port.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Port</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="-1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="httpsPort" use="optional">
            <xsd:annotation>
                <xsd:documentation>The port used for client HTTP requests secured with SSL (https). Use -1 to disable this port.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Secure port</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="-1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="protocolVersion" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>When Servlet 4.0 API is enabled as a feature, set this attribute to http/1.1 to disable HTTP/2 processing for the ports that were defined for the httpEndpoint element. When Servlet 3.1 API is enabled as a feature, set this attribute to http/2 to enable HTTP/2 processing for the ports that are defined for the httpEndpoint element.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Protocol version</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultHttpOptions" name="httpOptionsRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>HTTP protocol options for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>HTTP options reference</ext:label>
                    <ext:reference>httpOptions</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultRemoteIp" name="remoteIpRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Remote IP options for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Remote IP options reference</ext:label>
                    <ext:reference>remoteIp</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultCompression" name="compressionRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Compression options for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Compression options reference</ext:label>
                    <ext:reference>compression</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultSameSite" name="samesiteRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>SameSite options for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>SameSite options reference</ext:label>
                    <ext:reference>samesite</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultHeaders" name="headersRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Header options for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Header options reference</ext:label>
                    <ext:reference>headers</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultTCPOptions" name="tcpOptionsRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>TCP protocol options for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>TCP options reference</ext:label>
                    <ext:reference>tcpOptions</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="accessLoggingRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>HTTP access logging configuration for the endpoint.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>HTTP access logging reference</ext:label>
                    <ext:reference>httpAccessLogging</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.options">
        <xsd:annotation>
            <xsd:documentation>HTTP protocol configuration.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Options</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="true" name="keepAliveEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables persistent connections (HTTP keepalive). If true, connections are kept alive for reuse by multiple sequential requests and responses. If false, connections are closed after the response is sent.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable persistent connections</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="maxKeepAliveRequests" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum number of persistent requests that are allowed on a single HTTP connection if persistent connections are enabled. A value of -1 means unlimited. This option supports low latency or high throughput applications, and SSL connections for use in situations where building up a new connection can be costly.  </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum persistent requests per connection</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="-1"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="30s" name="persistTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Amount of time that a socket will be allowed to remain idle between requests. This setting only applies if persistent connections are enabled. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Persistent connection timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="60s" name="readTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Amount of time to wait for a read request to complete on a socket after the first read occurs. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Read timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="60s" name="writeTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Amount of time to wait on a socket for each portion of the response data to be transmitted. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Write timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="removeServerHeader" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Removes server implementation information from HTTP headers.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Remove server header</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="NoCacheCookiesControl" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Allows the user to control whether or not the presence of a Set-Cookie header should update the Cache-Control header with a matching no-cache value. This also adds the Expires header.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>No cache cookies control</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="AutoDecompression" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether the HTTP Channel automatically decompresses incoming request body data.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Auto decompression</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="500" name="limitNumHeaders" use="optional">
            <xsd:annotation>
                <xsd:documentation>Limits the number of HTTP headers that can exist in an incoming message. When this limit is exceeded, an error is returned to the remote client.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Limit number of headers</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="50"/>
                            <xsd:maxInclusive value="500"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="32768" name="limitFieldSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enforces the size limits on various HTTP fields, such as request URLs, or individual header names or values. Enforcing the size limits of these fields guards against possible Denial of Service attacks. An error is returned to the remote client, if a field exceeds the allowed size.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Limit header field size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="50"/>
                            <xsd:maxInclusive value="2147483647"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="DoNotAllowDuplicateSetCookies" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Prevents the HTTP Channel from sending multiple Set-Cookie headers with the same name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Do not allow duplicate set cookies</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="MessageSizeLimit" type="longType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Limits the acceptable size of an incoming message. If a message arrives with a size larger than this value, then an error is returned to the remote client.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Message size limit</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="32768" name="incomingBodyBufferSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the size of each buffer used when reading the body of an incoming HTTP message.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Incoming body buffer size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="1024"/>
                            <xsd:maxInclusive value="1048576"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="ThrowIOEForInboundConnections" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether the HTTP channel creates an I/O exception when an inbound connection is closed while still in use by the servlet. The default value is set according to the configured servlet feature. Prior to Servlet 4.0, the default value is false; starting with Servlet 4.0, the default value is true.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Throw I/O exception for inbound connections</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="200" name="decompressionRatioLimit" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum ratio of decompressed to compressed request body payload. The HTTP channel reads the request body and verifies the ratio as the body decompresses. The channel stops decompression of the request body if the decompression ratio remains above the configured value and the decompressionTolerance is reached.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Decompression ratio limit</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="1"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="3" name="decompressionTolerance" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum number of times the HTTP channel tolerates a decompression ratio above the configured ratio, depicted by the decompressionRatioLimit httpOption attribute. If this number reaches, and the next decompression cycle still contains a decompression ratio above the ratio limit, then the HTTP channel stops decompressing the request body.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Decompression tolerance</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="0" name="http2ConnectionIdleTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the amount of time, in seconds, that an HTTP/2 connection will be allowed to remain idle between socket IO operations. If not specified, or set to a value of 0, there is no connection timeout set. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>HTTP/2 connection idle timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="100" name="maxConcurrentStreams" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum number of streams that an HTTP/2 connection can have active at any given point. Opening streams over the limit, will result on a REFUSED_STREAM (0x7). If not specified, the default value of concurrent streams will be set to 200.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Max concurrent streams</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="57344" name="maxFrameSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum allowed size of a frame payload the server will advertise in the SETTINGS_MAX_FRAME_SIZE HTTP/2 settings frame. This can be configured to any size within the range of 16,384 to 16,777,215 bytes, inclusive. If not specified, the default is set to 57,344 bytes.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Max frame size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="16384"/>
                            <xsd:maxInclusive value="16777215"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="65535" name="settingsInitialWindowSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the initial window size in octets for HTTP/2 stream-level flow control. This value can be configured to any size within the range of 1 to 2,147,483,647 octets, inclusive. If no value is specified, the default value is 65,535 octets.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Stream-level initial window size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="1"/>
                            <xsd:maxInclusive value="2147483647"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="65535" name="connectionWindowSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the window size in octets for HTTP/2 connection-level flow control. This value can be configured to any size within the range of 65,535 to 2,147,483,647 octets, inclusive. If no value is specified, the default value is 65,535 octets.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Connection-level window size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="65535"/>
                            <xsd:maxInclusive value="2147483647"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="limitWindowUpdateFrames" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether the server waits until half of the HTTP/2 connection-level and stream-level windows are exhausted before it sends WINDOW_UPDATE frames. Valid values are true or false. If no value is specified, the default value is false.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Limit window_update frames</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="100" name="maxResetFrames" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum number of reset frames per connection that are allowed during the reset frame window. If this value is exceeded, the connection is closed. Set this parameter to 0 to disable the check.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum reset frames</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="30s" name="resetFramesWindow" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the window of time during which reset frames are counted on each connection. Set this parameter to 0 for unlimited time window. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Reset frame window</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="100" name="maxStreamsRefused" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum number of streams that are refused after the maximum concurrent streams limit is reached. If this value is exceeded, the connection is closed. Set this parameter to 0 to disable the check.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum streams refused</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="512000" name="maxHeaderBlockSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the maximum size in bytes for the header block of individual HTTP2 streams. If this value is exceeded, the connection is closed with an error. Set this parameter to 0 to disable the check.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum header block size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:long">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.options-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.options">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.remoteip">
        <xsd:annotation>
            <xsd:documentation>An element configured within the httpEndpoint element so that the associated HTTP channel is enabled to consider X-Forwarded-* or Forwarded request headers.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Remote IP Options</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1" name="proxies" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A regular expression that defines trusted proxies.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Proxies regex</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="useRemoteIpInAccessLog" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>If this property is set to true and the remote client information was verified by the HTTP Channel, the NCSA access log reflects the Forwarded or X-Forwarded-* headers. These headers are reflected when one or more of the following items are recorded: the remote client IP, the host, or the request protocol.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use remote IP in access log</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.remoteip-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.remoteip">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.virtualhost">
        <xsd:annotation>
            <xsd:documentation>A virtual host provides a logical grouping for configuring web applications to a particular host name. The default virtual host (default_host) is suitable for most simple configurations.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Virtual Host</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="hostAlias" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Associate a host and port with this virtual host, using the host:port syntax. The specified host can be an IP address, domain name server (DNS) hostname with a domain name suffix, the DNS hostname, or * for a wildcard match on all hostnames. Note that IPv6 addresses must be enclosed in [].</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Virtual host alias</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="allowFromEndpoint" type="com.ibm.ws.http-factory">
                <xsd:annotation>
                    <xsd:documentation>Specify the identifier of one or more HTTP endpoints to restrict inbound traffic for this virtual host to the specified endpoints.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Allow From Endpoints</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute default="true" name="enabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enable this virtual host.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enabled</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="allowFromEndpointRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specify the identifier of one or more HTTP endpoints to restrict inbound traffic for this virtual host to the specified endpoints.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow from endpoints</ext:label>
                    <ext:reference>httpEndpoint</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.http.virtualhost-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.http.virtualhost">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.security.java2sec.policyConfig">
        <xsd:annotation>
            <xsd:documentation>Configuration of permissions for Java 2 Security. </xsd:documentation>
            <xsd:appinfo>
                <ext:label>Java 2 Security</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="className" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name of the class implementing the permission being granted. For example, java.io.FilePermission.   </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Permission class</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="codebase" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The codebase that is being granted the permission.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Codebase</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="principalType" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The class name that would be matched for the given Principal Name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Principal class</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="principalName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The principal to whom the permission is being granted.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Principal name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The target for which the permission applies to.  For example, ALL FILES in the case of a java.io.FilePermission.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Target name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="actions" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The actions that the permission grant allows on the target name.  For example, read in the case of a java.io.FilePermission.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Actions</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="restriction" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Declares whether the permission is being restricted versus granted.  If restriction is set to "true" then this permission is denied as opposed to being granted.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Restriction</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.security.java2sec.policyConfig-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.security.java2sec.policyConfig">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.WebBnd">
        <xsd:annotation>
            <xsd:documentation>Specifies binding properties for a web application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Web Application Bindings</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="virtual-host" type="com.ibm.ws.javaee.dd.webbnd.VirtualHost">
                <xsd:annotation>
                    <xsd:documentation>Specifies the virtual host that is used for the web application.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Virtual Host</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="moduleName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Module name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.WebBnd-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.webbnd.WebBnd">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestination">
        <xsd:annotation>
            <xsd:documentation>A logical name used to locate a message destination.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Message Destination</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name of the message destination.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The binding name of the message destination.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestination-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.MessageDestination">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EnvEntry">
        <xsd:annotation>
            <xsd:documentation>Defines an environment entry.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Environment Entry</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name of the environment entry.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The value of the environment entry.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The binding name for the environment entry.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.EnvEntry">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.BeanCache">
        <xsd:annotation>
            <xsd:documentation>Cache settings for an EJB.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Bean Cache</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="activation-policy" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the point at which an EJB is placed in the cache.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Activation policy</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="TRANSACTION">
                                <xsd:annotation>
                                    <xsd:documentation>TRANSACTION</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ONCE">
                                <xsd:annotation>
                                    <xsd:documentation>ONCE</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.BeanCache-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.BeanCache">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter">
        <xsd:annotation>
            <xsd:documentation>Specifies properties for the JCA adapter. A message driven bean must have a JCA adapter defined. </xsd:documentation>
            <xsd:appinfo>
                <ext:label>JCA Adapter</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="activation-spec-binding-name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>Specifies the binding name for an activation specification.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Activation specification binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="activation-spec-auth-alias" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the authentication alias for an activation specification.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Activation specification authentication alias</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="destination-binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the destination binding name for a JCA adapter.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Destination binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd">
        <xsd:annotation>
            <xsd:documentation>Defines properties that apply to application bindings.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Application Bindings</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="security-role" type="com.ibm.ws.javaee.dd.appbnd.SecurityRole-factory">
                <xsd:annotation>
                    <xsd:documentation>A role that is mapped to users and groups in a domain user registry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Security Role</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias">
        <xsd:annotation>
            <xsd:documentation>An authentication alias for a resource reference.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Authentication Alias</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceRef">
        <xsd:annotation>
            <xsd:documentation>Used to declare additional settings on a Java EE resource reference.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Resource Reference</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="authentication-alias" type="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias">
                <xsd:annotation>
                    <xsd:documentation>The authentication alias for the resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Authentication Alias</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-login-configuration" type="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration">
                <xsd:annotation>
                    <xsd:documentation>Specifies custom login configuration properties.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Custom Login</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the resource reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The binding name for the resource reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.ResourceRef">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.MimeFilter">
        <xsd:annotation>
            <xsd:documentation>Defines a mime filter for a web application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Mime Filter</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="target" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The target for the mime filter.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Target</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="mime-type" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The type for the mime filter.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Mime type</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.MimeFilter-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.webext.MimeFilter">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SecurityRole">
        <xsd:annotation>
            <xsd:documentation>A role that is mapped to users and groups in a domain user registry.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Security Role</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="user" type="com.ibm.ws.javaee.dd.appbnd.User-factory">
                <xsd:annotation>
                    <xsd:documentation>The user for a security role.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>User</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="group" type="com.ibm.ws.javaee.dd.appbnd.Group-factory">
                <xsd:annotation>
                    <xsd:documentation>The group for a security role.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Group</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="special-subject" type="com.ibm.ws.javaee.dd.appbnd.SpecialSubject-factory">
                <xsd:annotation>
                    <xsd:documentation>Name of a special subject possessing a security role.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Special Subject</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="run-as" type="com.ibm.ws.javaee.dd.appbnd.RunAs">
                <xsd:annotation>
                    <xsd:documentation>ID and password of a user that is required to access a bean from another bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Run As</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for a security role. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SecurityRole-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.SecurityRole">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.User">
        <xsd:annotation>
            <xsd:documentation>The user for the security role.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>User</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the subject.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="access-id" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The access ID for a subject.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Access ID</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.User-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.User">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ClientRefBindingsGroup">
        <xsd:annotation>
            <xsd:documentation>Reference bindings in an application client.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Client Reference Bindings</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>EJB References in an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Resource references in an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Message destination reference in an application client.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Message Destination References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Defines a data source for an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Defines an environment entry for an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ClientRefBindingsGroup-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.clientbnd.ClientRefBindingsGroup">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration">
        <xsd:annotation>
            <xsd:documentation>Defines a custom login configuration for a resource reference.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Custom Login</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="property" type="com.ibm.ws.javaee.dd.commonbnd.Property-factory">
                <xsd:annotation>
                    <xsd:documentation>Defines a property for a custom login configuration.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Properties</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A name for the custom login configuration. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.MessageDriven">
        <xsd:annotation>
            <xsd:documentation>Specifies properties for message driven beans.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Message Driven Bean</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="bean-cache" type="com.ibm.ws.javaee.dd.ejbext.BeanCache">
                <xsd:annotation>
                    <xsd:documentation>Cache settings for an EJB.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Bean Cache</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="local-transaction" type="com.ibm.ws.javaee.dd.commonext.LocalTransaction">
                <xsd:annotation>
                    <xsd:documentation>Specifies local transactions for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Local Transactions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="global-transaction" type="com.ibm.ws.javaee.dd.commonext.GlobalTransaction">
                <xsd:annotation>
                    <xsd:documentation>Specifies global transactions for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Global Transactions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies resource references for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="start-at-app-start" type="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart">
                <xsd:annotation>
                    <xsd:documentation>Controls whether the bean starts at application start.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start At Application Start</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.MessageDriven-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.MessageDriven">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBean">
        <xsd:annotation>
            <xsd:documentation>Defines properties for a managed bean.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Managed Bean</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="class" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>Specifies the class name for a managed bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Class</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBean-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.managedbean.ManagedBean">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.Attribute">
        <xsd:annotation>
            <xsd:documentation>Attributes consisting of a name value pair.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Attributes</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The attribute name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The attribute value.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.Attribute-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.webext.Attribute">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.RefBindingsGroup">
        <xsd:annotation>
            <xsd:documentation>Defines properties for reference bindings.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Reference Bindings</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.RefBindingsGroup-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.RefBindingsGroup">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd">
        <xsd:annotation>
            <xsd:documentation>Specifies the bindings for a managed bean.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Managed Bean Bindings</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="interceptor" type="com.ibm.ws.javaee.dd.commonbnd.Interceptor-factory">
                <xsd:annotation>
                    <xsd:documentation>Defines interceptors for the managed bean binding.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Interceptors</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="managed-bean" type="com.ibm.ws.javaee.dd.managedbean.ManagedBean-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the managed bean for this binding.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Managed Beans</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="moduleName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Module name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.LocalTransaction">
        <xsd:annotation>
            <xsd:documentation>Defines a local transaction for a servlet or an EJB application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Location Transaction</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="resolver" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines a resolver for the local transaction. The value can be either APPLICATION or CONTAINER_AT_BOUNDARY. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Resolver</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="CONTAINER_AT_BOUNDARY">
                                <xsd:annotation>
                                    <xsd:documentation>CONTAINER_AT_BOUNDARY</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="APPLICATION">
                                <xsd:annotation>
                                    <xsd:documentation>APPLICATION</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="unresolved-action" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the behavor for unresolved actions. The value can be either ROLLBACK or COMMIT.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Unresolved action</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="COMMIT">
                                <xsd:annotation>
                                    <xsd:documentation>COMMIT</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ROLLBACK">
                                <xsd:annotation>
                                    <xsd:documentation>ROLLBACK</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="shareable" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines whether the local transaction is shareable.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Shareable</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.LocalTransaction-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.LocalTransaction">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.Session">
        <xsd:annotation>
            <xsd:documentation>Properties for a session bean in an EJB application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Session</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="bean-cache" type="com.ibm.ws.javaee.dd.ejbext.BeanCache">
                <xsd:annotation>
                    <xsd:documentation>Cache settings for an EJB.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Bean Cache</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="local-transaction" type="com.ibm.ws.javaee.dd.commonext.LocalTransaction">
                <xsd:annotation>
                    <xsd:documentation>Specifies local transactions for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Local Transactions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="global-transaction" type="com.ibm.ws.javaee.dd.commonext.GlobalTransaction">
                <xsd:annotation>
                    <xsd:documentation>Specifies global transactions for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Global Transactions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies resource references for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="start-at-app-start" type="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart">
                <xsd:annotation>
                    <xsd:documentation>Controls whether the bean starts at application start.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start At Application Start</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="time-out" type="com.ibm.ws.javaee.dd.ejbext.TimeOut">
                <xsd:annotation>
                    <xsd:documentation>Specifies a time out value for the session bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Time Out</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.Session-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.Session">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EJBJarExt">
        <xsd:annotation>
            <xsd:documentation>Extension properties for EJB applications.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>EJB Jar Extensions</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="session" type="com.ibm.ws.javaee.dd.ejbext.Session-factory">
                <xsd:annotation>
                    <xsd:documentation>Extension properties for session beans.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Session Bean Extensions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-driven" type="com.ibm.ws.javaee.dd.ejbext.MessageDriven-factory">
                <xsd:annotation>
                    <xsd:documentation>Extension properties for message driven beans.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Driven Bean Extensions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="moduleName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Module name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EJBJarExt-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.EJBJarExt">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.ResourceRef">
        <xsd:annotation>
            <xsd:documentation>Used to declare additional settings on a Java EE resource reference.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Resource Reference</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the resource reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="isolation-level" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the transaction isolation level.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Isolation level</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="TRANSACTION_READ_COMMITTED">
                                <xsd:annotation>
                                    <xsd:documentation>TRANSACTION_READ_COMMITTED</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TRANSACTION_SERIALIZABLE">
                                <xsd:annotation>
                                    <xsd:documentation>TRANSACTION_SERIALIZABLE</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TRANSACTION_REPEATABLE_READ">
                                <xsd:annotation>
                                    <xsd:documentation>TRANSACTION_REPEATABLE_READ</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TRANSACTION_READ_UNCOMMITTED">
                                <xsd:annotation>
                                    <xsd:documentation>TRANSACTION_READ_UNCOMMITTED</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TRANSACTION_NONE">
                                <xsd:annotation>
                                    <xsd:documentation>TRANSACTION_NONE</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="0" name="commit-priority" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the commit priority for the resource reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Commit priority</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="branch-coupling" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether loose or tight coupling is used.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Branch coupling</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="LOOSE">
                                <xsd:annotation>
                                    <xsd:documentation>LOOSE</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TIGHT">
                                <xsd:annotation>
                                    <xsd:documentation>TIGHT</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.ResourceRef">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Property">
        <xsd:annotation>
            <xsd:documentation>Defines a custom login configuration property.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Property</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name of the property.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The value of the property.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="description" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A description of the property.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Description</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Property-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.Property">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef">
        <xsd:annotation>
            <xsd:documentation>Defines properties for a resource environment reference.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Resource Environment Reference</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the resource environment reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The binding name for the resource environment reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven">
        <xsd:annotation>
            <xsd:documentation>Specifies properties for message driven beans.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Message Driven Bean</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="jca-adapter" type="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter">
                <xsd:annotation>
                    <xsd:documentation>Defines a JCA adapter for a message driven bean.  </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>JCA Adapter</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Group">
        <xsd:annotation>
            <xsd:documentation>Group that has the security role. </xsd:documentation>
            <xsd:appinfo>
                <ext:label>Group</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the subject.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="access-id" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The access ID for a subject.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Access ID</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Group-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.Group">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SpecialSubject">
        <xsd:annotation>
            <xsd:documentation>Special subject that has the security role.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Special Subject</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="type" use="optional">
            <xsd:annotation>
                <xsd:documentation>One of the following special subject types: ALL_AUTHENTICATED_USERS, EVERYONE.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Type</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="ALL_AUTHENTICATED_USERS">
                                <xsd:annotation>
                                    <xsd:documentation>ALL_AUTHENTICATED_USERS</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="EVERYONE">
                                <xsd:annotation>
                                    <xsd:documentation>EVERYONE</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SpecialSubject-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.SpecialSubject">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.TimeOut">
        <xsd:annotation>
            <xsd:documentation>Specifies a session bean time out value.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Time Out</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="0" name="value" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>The value for the time out. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.TimeOut-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.TimeOut">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.VirtualHost">
        <xsd:annotation>
            <xsd:documentation>Specifies the virtual host used by this web application. The virtual host must be defined in the configuration.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Virtual Host</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the virtual host</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.VirtualHost-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.webbnd.VirtualHost">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EJBRef">
        <xsd:annotation>
            <xsd:documentation>A logical name used to locate the home interface of an enterprise bean.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>EJB References</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the EJB reference. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The binding name for the EJB reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.EJBRef">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd">
        <xsd:annotation>
            <xsd:documentation>The EJB binding descriptor defines binding information for an EJB module. </xsd:documentation>
            <xsd:appinfo>
                <ext:label>EJB Jar Bindings</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="session" type="com.ibm.ws.javaee.dd.ejbbnd.Session-factory">
                <xsd:annotation>
                    <xsd:documentation>Binding properties for session beans.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Session Bean Bindings</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-driven" type="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven-factory">
                <xsd:annotation>
                    <xsd:documentation>Binding properties for message driven beans.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Driven Bean Bindings</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="interceptor" type="com.ibm.ws.javaee.dd.commonbnd.Interceptor-factory">
                <xsd:annotation>
                    <xsd:documentation>Binding properties for interceptors.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Interceptor Bindings</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestination-factory">
                <xsd:annotation>
                    <xsd:documentation>Binding properties for message destinations.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destination Bindings</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="moduleName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Module name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EnterpriseBean">
        <xsd:annotation>
            <xsd:documentation>A description of an enterprise bean in an EJB application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Enterprise Bean</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EnterpriseBean-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.EnterpriseBean">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.GlobalTransaction">
        <xsd:annotation>
            <xsd:documentation>Specifies properties for a global transaction.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Global Transaction</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="false" name="send-wsat-context" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Determines whether to send the web services atomic transaction on outgoing requests.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Send WSAT context</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0" name="transaction-time-out" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the timeout for the global transaction.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Transaction timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.GlobalTransaction-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.GlobalTransaction">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef">
        <xsd:annotation>
            <xsd:documentation>A logical name used to locate a message destination.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Message Destination Reference</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the message destination reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The binding name for the message destination reference.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.Method">
        <xsd:annotation>
            <xsd:documentation>Used to specify the method name, method signature, or method types to which a given setting might apply.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Method</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the name for the method.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="params" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies parameters for the method.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Parameters</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="type" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the type of the method.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Type</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="LOCAL_HOME">
                                <xsd:annotation>
                                    <xsd:documentation>LOCAL_HOME</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="REMOTE">
                                <xsd:annotation>
                                    <xsd:documentation>REMOTE</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="UNSPECIFIED">
                                <xsd:annotation>
                                    <xsd:documentation>UNSPECIFIED</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="SERVICE_ENDPOINT">
                                <xsd:annotation>
                                    <xsd:documentation>SERVICE_ENDPOINT</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="LOCAL">
                                <xsd:annotation>
                                    <xsd:documentation>LOCAL</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="HOME">
                                <xsd:annotation>
                                    <xsd:documentation>HOME</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.Method-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.Method">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appext.ApplicationExt">
        <xsd:annotation>
            <xsd:documentation>Defines properties to extend applications.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Application Extensions</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="shared-session-context" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates whether the session context is shared between modules.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Shared session context</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appext.ApplicationExt-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appext.ApplicationExt">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EnterpriseBean">
        <xsd:annotation>
            <xsd:documentation>A description of an enterprise bean in an EJB application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Enterprise Bean</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="bean-cache" type="com.ibm.ws.javaee.dd.ejbext.BeanCache">
                <xsd:annotation>
                    <xsd:documentation>Cache settings for an EJB.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Bean Cache</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="local-transaction" type="com.ibm.ws.javaee.dd.commonext.LocalTransaction">
                <xsd:annotation>
                    <xsd:documentation>Specifies local transactions for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Local Transactions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="global-transaction" type="com.ibm.ws.javaee.dd.commonext.GlobalTransaction">
                <xsd:annotation>
                    <xsd:documentation>Specifies global transactions for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Global Transactions</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies resource references for this enterprise bean.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="start-at-app-start" type="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart">
                <xsd:annotation>
                    <xsd:documentation>Controls whether the bean starts at application start.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start At Application Start</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EnterpriseBean-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.EnterpriseBean">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.Interface">
        <xsd:annotation>
            <xsd:documentation>Specifies a session interface.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Interface</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies a binding name for an interface.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Interface binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="class" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The class name for the interface.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Class name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.Interface-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.Interface">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Subject">
        <xsd:annotation>
            <xsd:documentation>Properties for a user or group.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Subject</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name for the subject.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="access-id" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The access ID for a subject.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Access ID</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Subject-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.Subject">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd">
        <xsd:annotation>
            <xsd:documentation>Defines properties that apply to application clients.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Application Clients</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>EJB References in an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Resource references in an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Message destination reference in an application client.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Message Destination References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Defines a data source for an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Defines an environment entry for an application client. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Client Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.DataSource">
        <xsd:annotation>
            <xsd:documentation>The definition of a data source.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Data Sources</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The data source name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The data source binding name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.DataSource">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart">
        <xsd:annotation>
            <xsd:documentation>Used to inform the EJB container that the specified EJB type can be initialized at the time the application is first started, rather than the time the EJB type is first used by the application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Start At Application Start</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="false" name="value" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>The value of the start at application start property.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Interceptor">
        <xsd:annotation>
            <xsd:documentation>The name for the interceptor.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Name</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="class" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The class name for the interceptor.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Class name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Interceptor-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.Interceptor">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.WebExt">
        <xsd:annotation>
            <xsd:documentation>Extension properties for web applications.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Web Application Extensions</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="file-serving-attribute" type="com.ibm.ws.javaee.dd.webext.Attribute-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies whether the web application allows files to be served.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>File Serving Properties</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="invoker-attribute" type="com.ibm.ws.javaee.dd.webext.Attribute-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies attributes for an invoker.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Invoker Properties</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="jsp-attribute" type="com.ibm.ws.javaee.dd.webext.Attribute-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies attributes that affect JSP behavior.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>JSP Properties</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="mime-filter" type="com.ibm.ws.javaee.dd.webext.MimeFilter-factory">
                <xsd:annotation>
                    <xsd:documentation>Properties for a MIME filter.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Mime Filters</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Properties for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="moduleName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Module name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="default-error-page" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies a page to be used as the default error page for a web application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Default error page URI</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="context-root" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the context root for a web application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Context root</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="autoload-filters" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Determines whether filters are loaded automatially.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Auto load filters</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="auto-encode-requests" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Determines whether requests are automatically encoded.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Auto encode requests</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="auto-encode-responses" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Determines whether responses are automatically encoded.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Auto encode responses</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="enable-directory-browsing" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether directory browsing is enabled for this web application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable directory browsing</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="enable-file-serving" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether file serving is enabled for this web application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable file serving</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="pre-compile-jsps" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies whether JSP pages are compiled when the web application starts.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Pre-compile JSPs</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="enable-serving-servlets-by-class-name" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables serving servlets by classname.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable serving servlets by class names</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.WebExt-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.webext.WebExt">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.RunAs">
        <xsd:annotation>
            <xsd:documentation>ID and password of a user required to access a bean from another bean.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Run As</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="userid" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>ID of a user required to access a bean from another bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>User ID</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="password" type="password" use="optional">
            <xsd:annotation>
                <xsd:documentation>Password of a user required to access a bean from another bean. The value can be stored in clear text or encoded form. To encode the password, use the securityUtility tool with the encode option.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Password</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.RunAs-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.RunAs">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.Session">
        <xsd:annotation>
            <xsd:documentation>Properties for a session bean in an EJB application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Session</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>EJB References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Resource Environment References</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Message Destinations</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Data Sources</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Environment Entries</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="interface" type="com.ibm.ws.javaee.dd.ejbbnd.Interface-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies a session interface.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Interface</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="simple-binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the simple binding name for a session bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Simple binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="component-id" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The component ID for a session bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Component ID</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="remote-home-binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The remote home binding name for a session bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Remote home binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="local-home-binding-name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The local home binding name for a session bean.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Local home binding name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.Session-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.Session">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.config">
        <xsd:annotation>
            <xsd:documentation>Defines how the server processes configuration information.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Configuration Management</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="WARN" name="onError" use="optional">
            <xsd:annotation>
                <xsd:documentation>Action to take after a incurring a configuration error. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>On error</ext:label>
                    <ext:variable>onError</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="WARN">
                                <xsd:annotation>
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="FAIL">
                                <xsd:annotation>
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="500ms" name="monitorInterval" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Rate at which the server checks for configuration updates. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Update polling rate</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="polled" name="updateTrigger" use="optional">
            <xsd:annotation>
                <xsd:documentation>Configuration update method or trigger.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Update trigger</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="polled">
                                <xsd:annotation>
                                    <xsd:documentation>Server will scan for changes at the polling interval on all the configuration files and update the runtime configuration with the changes detected.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="mbean">
                                <xsd:annotation>
                                    <xsd:documentation>Server will only update the configuration when prompted by the FileNotificationMbean. The FileNotificationMbean is typically called by an external program such as an integrated development environment or a management application.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="disabled">
                                <xsd:annotation>
                                    <xsd:documentation>Disables all update monitoring. Configuration changes will not be applied while the server is running.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.kernel.metatype.helper.fileset">
        <xsd:annotation>
            <xsd:documentation>Specifies a set of files starting from a base directory and matching a set of patterns.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Fileset</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="${server.config.dir}" name="dir" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>The base directory to search for files.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Base directory</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="caseSensitive" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Boolean to indicate whether or not the search should be case sensitive (default: true).</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Case sensitive</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="*" name="includes" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The comma or space separated list of file name patterns to include in the search results (default: *).</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Includes pattern</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="excludes" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The comma or space separated list of file name patterns to exclude from the search results, by default no files are excluded.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Excludes pattern</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0" name="scanInterval" type="duration" use="optional">
            <xsd:annotation>
                <xsd:documentation>The scanning interval to determine whether files are added or removed from the fileset. The individual files are not scanned. The suffix for the interval of time is h-hour, m-minute, s-second, and ms-millisecond, for example, 2ms or 5s. The scanning interval is disabled by default and is disabled manually by setting the scan interval, scanInterval, to 0. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Scan interval</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.kernel.metatype.helper.fileset-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.kernel.metatype.helper.fileset">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.threading">
        <xsd:annotation>
            <xsd:documentation>Defines settings for the Liberty kernel default executor.  Note that there is always one and exactly one default executor, for use by the Liberty runtime only and not directly accessible by applications.  Applications that need to configure and utilize executors should instead use Managed Executors.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Executor Management</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="Default Executor" name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The name of the Liberty kernel default executor.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="maxThreads" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum number of threads that can be associated with the executor. If greater than 0, maxThreads can be a minimum of 4, and should be at least as large as coreThreads; if maxThreads is set less than coreThreads, Liberty will reduce coreThreads to the maxThreads value.  If the value of maxThreads is less than or equal to 0, the maximum number of threads is unbounded, which lets the Liberty kernel decide how many threads to associate with the executor without having a defined upper boundary.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum threads</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="coreThreads" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Baseline or minimum number of threads to associate with the executor. The number of threads associated with the executor will quickly grow to this number. If this value is less than 0, a default value is used, calculated based on the number of hardware threads on the system. If the value is a positive number less than 4, then a default value of 4 is used.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Core threads</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.kernel.feature">
        <xsd:annotation>
            <xsd:documentation>Defines how the server loads features.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Feature Manager</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="feature" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Specifies a feature to be used when the server runs.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Feature</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute default="WARN" name="onError" use="optional">
            <xsd:annotation>
                <xsd:documentation>Action to take after a failure to load a feature. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>On error</ext:label>
                    <ext:variable>onError</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="WARN">
                                <xsd:annotation>
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="FAIL">
                                <xsd:annotation>
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.logging">
        <xsd:annotation>
            <xsd:documentation>Controls the capture and output of log and trace messages.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Logging</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="binaryTrace" type="com.ibm.ws.logging.binaryTrace"/>
            <xsd:element name="binaryLog" type="com.ibm.ws.logging.binaryLog"/>
        </xsd:choice>
        <xsd:attribute default="20" name="maxFileSize" use="optional">
            <xsd:annotation>
                <xsd:documentation>The maximum size (in MB) that a log file can reach before it is rolled. The Liberty runtime does only size-based log rolling. To disable this attribute, set the value to 0. The maximum file size is approximate. By default, the value is 20. Note: maxFileSize does not apply to the console.log file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum log file size</ext:label>
                    <ext:variable>com.ibm.ws.logging.max.file.size</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="2" name="maxFiles" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum number of log files that are kept before the oldest file is removed; a value of 0 means no limit. If an enforced maximum file size exists, this setting is used to determine how many of each of the log files are kept. This setting also applies to the number of exception logs that summarize exceptions that occurred on a particular day. So if this number is 10, you might have 10 message logs, 10 trace logs, and 10 exception summaries in the ffdc/directory. By default, the value is 2. Note: maxFiles does not apply to the console.log file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum log files</ext:label>
                    <ext:variable>com.ibm.ws.logging.max.files</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="0"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="${server.output.dir}/logs" name="logDirectory" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>You can use this attribute to set a directory for all log files, excluding the console.log file, but including FFDC. By default, logDirectory is set to the LOG_DIR environment variable. The default LOG_DIR environment variable path is WLP_OUTPUT_DIR/serverName/logs. Avoid trouble: Use the LOG_DIR environment variable or the com.ibm.ws.logging.log.directory property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Log directory</ext:label>
                    <ext:variable>com.ibm.ws.logging.log.directory</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="messages.log" name="messageFileName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of the file to which message output is written relative to the configured log directory. The default value is messages.log. This file always exists and contains INFO and other (AUDIT, WARNING, ERROR, FAILURE) messages, in addition to System.out and System.err. This log also contains time stamps and the issuing thread ID. If the log file is rolled over, the names of earlier log files have the format messages_timestamp.log. Avoid trouble: Use the com.ibm.ws.logging.message.file.name property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Message file name</ext:label>
                    <ext:variable>com.ibm.ws.logging.message.file.name</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="trace.log" name="traceFileName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of the file to which trace output is written relative to the configured log directory. The default value is trace.log. The trace.log file is only created if a traceSpecification is set including log levels below INFO. stdout is recognized as a special value and causes trace to be directed to the original standard out stream. Avoid trouble: Use the com.ibm.ws.logging.trace.file.name property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Trace file name</ext:label>
                    <ext:variable>com.ibm.ws.logging.trace.file.name</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="*=info" name="traceSpecification" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A trace specification that conforms to the trace specification grammar and specifies the initial state for various trace components. The trace specification is used to selectively enable trace. An empty value is allowed and treated as 'disable all trace'. Any component that is not specified is initialized to a default state of *=info.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Trace specification</ext:label>
                    <ext:variable>com.ibm.ws.logging.trace.specification</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="hideMessage" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The list of messages, which are separated by a comma, that are configured to be hidden from the console.log and messages.log files. If the messages are configured to be hidden, then they are redirected to the trace.log file. Avoid trouble: Use the com.ibm.ws.logging.hideMessage property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Messages to be hidden</ext:label>
                    <ext:variable>com.ibm.ws.logging.hideMessage</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="message" name="messageSource" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The list of comma-separated sources that route to the messages.log file. This property applies only when messageFormat=json. Valid values are message, trace, accessLog, ffdc, and audit. By default, messageSource is set to the environment variable WLP_LOGGING_MESSAGE_SOURCE (if set), or message. Note: To use the audit source, enable the Liberty audit feature. Enable access logs by setting an accessLogging element for your httpEndpoint. Avoid trouble: Use the WLP_LOGGING_MESSAGE_SOURCE environment variable or the com.ibm.ws.logging.message.source property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Message source</ext:label>
                    <ext:variable>com.ibm.ws.logging.message.source</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="SIMPLE" name="messageFormat" use="optional">
            <xsd:annotation>
                <xsd:documentation>The required format for the messages.log file. Valid values are SIMPLE or JSON format. By default, messageFormat is set to the environment variable WLP_LOGGING_MESSAGE_FORMAT (if set), or SIMPLE. Avoid trouble: Use the WLP_LOGGING_MESSAGE_FORMAT environment variable or the com.ibm.ws.logging.message.format property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Message format</ext:label>
                    <ext:variable>com.ibm.ws.logging.message.format</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="SIMPLE">
                                <xsd:annotation>
                                    <xsd:documentation>Use the simple logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TBASIC">
                                <xsd:annotation>
                                    <xsd:documentation>Use the tbasic logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="JSON">
                                <xsd:annotation>
                                    <xsd:documentation>Use the JSON logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="message" name="consoleSource" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The list of comma-separated sources that route to the console/console.log. This property applies only when consoleFormat=json. Valid values are message, trace, accessLog, ffdc, and audit. By default, consoleSource is set to the environment variable WLP_LOGGING_CONSOLE_SOURCE (if set), or message. Note: To use the audit source, enable the Liberty audit feature. Enable access logs by setting an accessLogging element for your httpEndpoint. Avoid trouble: Use the WLP_LOGGING_CONSOLE_SOURCE environment variable or the com.ibm.ws.logging.console.source property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Console source</ext:label>
                    <ext:variable>com.ibm.ws.logging.console.source</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="DEV" name="consoleFormat" use="optional">
            <xsd:annotation>
                <xsd:documentation>The required format for the console. Valid values are DEV, SIMPLE, or JSON format. By default, consoleFormat is set to the environment variable WLP_LOGGING_CONSOLE_FORMAT (if set), or DEV. Avoid trouble: Use the WLP_LOGGING_CONSOLE_FORMAT environment variable or the com.ibm.ws.logging.console.format property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Console format</ext:label>
                    <ext:variable>com.ibm.ws.logging.console.format</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="DEV">
                                <xsd:annotation>
                                    <xsd:documentation>Use the dev logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="SIMPLE">
                                <xsd:annotation>
                                    <xsd:documentation>Use the simple logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TBASIC">
                                <xsd:annotation>
                                    <xsd:documentation>Use the tbasic logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="JSON">
                                <xsd:annotation>
                                    <xsd:documentation>Use the JSON logging format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="ENHANCED" name="traceFormat" use="optional">
            <xsd:annotation>
                <xsd:documentation>This format is used for the trace log. Avoid trouble: Use the com.ibm.ws.logging.trace.format property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Trace format</ext:label>
                    <ext:variable>com.ibm.ws.logging.trace.format</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="BASIC">
                                <xsd:annotation>
                                    <xsd:documentation>Use the basic trace format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="TBASIC">
                                <xsd:annotation>
                                    <xsd:documentation>Alias for the basic trace format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ENHANCED">
                                <xsd:annotation>
                                    <xsd:documentation>Use the enhanced basic trace format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ADVANCED">
                                <xsd:annotation>
                                    <xsd:documentation>Use the advanced trace format.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="isoDateFormat" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>The date and time use a locale-specific format or the ISO-8601 format. You can specify true or false for the value of the attribute or the value of the equivalent property. The default value is false. Avoid trouble: Use the com.ibm.ws.logging.isoDateFormat property, except in cases where you are trying to change the configuration dynamically after startup. If you specify a value of true, the ISO-8601 format is used in the messages.log file, the trace.log file, and the FFDC logs. The format is yyyy-MM-dd'T'HH:mm:ss.SSSZ. If you specify a value of false, the date and time are formatted according to the default locale set in the system. If the default locale is not found, the format is dd/MMM/yyyy HH:mm:ss:SSS z.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use the ISO 8601 date format</ext:label>
                    <ext:variable>com.ibm.ws.logging.isoDateFormat</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="stackTraceSingleEntry" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Handle stack traces written to System.out/System.err as a single event in the logs. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Format stack traces as a single event in logs</ext:label>
                    <ext:variable>com.ibm.ws.logging.stackTraceSingleEntry</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="AUDIT" name="consoleLogLevel" use="optional">
            <xsd:annotation>
                <xsd:documentation>The logging level used to filter messages written to system streams. The valid values are INFO, AUDIT, WARNING, ERROR, and OFF. By default, the consoleLogLevel is set to the WLP_LOGGING_CONSOLE_LOGLEVEL environment variable (if set), or AUDIT. Note: Before you change this value, consider the information in the section "Unable to interact with the Liberty server after modifying the console log level settings" in the topic Developer Tools known restrictions. Avoid trouble: Use the WLP_LOGGING_CONSOLE_LOGLEVEL environment variable or the com.ibm.ws.logging.console.level property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Console log level</ext:label>
                    <ext:variable>com.ibm.ws.logging.console.log.level</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="INFO">
                                <xsd:annotation>
                                    <xsd:documentation>Info, audit, and warning messages will be written to the system output stream. Error messages will be written to the system error stream.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="AUDIT">
                                <xsd:annotation>
                                    <xsd:documentation>Audit and warning messages will be written to the system output stream. Error messages will be written to the system error stream.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="WARNING">
                                <xsd:annotation>
                                    <xsd:documentation>Warning messages will be written to the system output stream. Error messages will be written to the system error stream.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="ERROR">
                                <xsd:annotation>
                                    <xsd:documentation>Error messages will be written to the system error stream.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="OFF">
                                <xsd:annotation>
                                    <xsd:documentation>No server output is written to system streams. Only JVM output is written to system streams.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="copySystemStreams" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>If true, messages that are written to the System.out and System.err streams are copied to console.log. If false, those messages are written to configured logs such as messages.log or trace.log, but they are not copied to console.log. The default value is true. Avoid trouble: Use the com.ibm.ws.logging.copy.system.streams property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Copy System.out and System.err to system streams</ext:label>
                    <ext:variable>com.ibm.ws.logging.copy.system.streams</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="suppressSensitiveTrace" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this attribute is set to true, it prevents potentially sensitive information from being exposed in log and trace files. The default value is false. Avoid trouble: Use the com.ibm.ws.logging.suppress.sensitive.trace property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Suppress sensitive trace</ext:label>
                    <ext:variable>com.ibm.ws.logging.suppress.sensitive.trace</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="jsonFieldMappings" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>When logs are in JSON format, use this attribute to replace default field names with new field names or to omit fields from the logs. To replace a field name, configure the new field name by using the following format: defaultFieldName:newFieldName?. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName?, where [source] is the source you want to specify, such as message, trace, or accessLog. To omit a field from the logs, specify the field name without a replacement, as shown in the following example: defaultFieldName:. To rename or omit multiple fields, specify a comma-separated list of field name mappings.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>JSON field names that are being replaced</ext:label>
                    <ext:variable>com.ibm.ws.logging.json.field.mappings</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="default" name="jsonAccessLogFields" use="optional">
            <xsd:annotation>
                <xsd:documentation>When logs are in JSON format, use this attribute to choose between using access log fields specified in the accessLogging logFormat property or the default access log fields.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>JSON fields to use from access logs</ext:label>
                    <ext:variable>com.ibm.ws.logging.json.access.log.fields</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="default">
                                <xsd:annotation>
                                    <xsd:documentation>Use the default set of access log fields.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="logFormat">
                                <xsd:annotation>
                                    <xsd:documentation>Use the set of access log fields that match logFormat.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="appsWriteJson" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When message log or console log is in JSON format, allow applications to write JSON-formatted messages to those destinations, without modification.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow apps to write JSON</ext:label>
                    <ext:variable>com.ibm.ws.logging.apps.write.json</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="rolloverStartTime" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The scheduled time of day for logs to first roll over. The rollover interval duration begins at rollover start time. Valid values follow a 24-hour ISO-8601 datetime format of HH:MM, where 00:00 represents midnight. Padding zeros are required. If rolloverInterval is specified, the default value of rolloverStartTime is 00:00, midnight. If both rolloverInterval and rolloverStartTime are unspecified, time based log rollover is disabled. Note: rolloverStartTime does not apply to the console.log file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Rollover start time for time based log rollover</ext:label>
                    <ext:variable>com.ibm.ws.logging.rollover.start.time</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="rolloverInterval" type="minuteDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>The time interval in between log rollovers, in minutes if a unit of time is not specified. Specify a positive integer followed by a unit of time, which can be days (d), hours (h), or minutes (m). For example, specify 5 hours as 5h. You can include multiple values in a single entry. For example, 1d5h is equivalent to 1 day and 5 hours. If rolloverStartTime is specified, the default value of rolloverInterval is 1 day. If both rolloverInterval and rolloverStartTime are unspecified, time based log rollover is disabled. Note: rolloverInterval does not apply to the console.log file. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Rollover interval for time based log rollover</ext:label>
                    <ext:variable>com.ibm.ws.logging.rollover.interval</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="maxFfdcAge" type="minuteDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>The maximum wanted age before an FFDC file is deleted. Specify a positive integer followed by a unit of time, which can be days (d), hours (h), or minutes (m). For example, specify 2 days as 2d. You can include multiple values in a single entry. For example, 2d6h is equivalent to 2 days and 6 hours. Everyday at midnight, any FFDC file that reaches the maximum age is deleted. By default, FFDC files are not deleted based on file age. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum age before an FFDC file is deleted</ext:label>
                    <ext:variable>com.ibm.ws.logging.max.ffdc.age</ext:variable>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.webappcfg">
        <xsd:annotation>
            <xsd:documentation>Defines the properties of a web application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Web Application</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="startAfter" type="com.ibm.ws.app.manager-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start After</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader">
                <xsd:annotation>
                    <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Classloader</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"/>
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"/>
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"/>
            <xsd:element name="web-ext" type="com.ibm.ws.javaee.dd.webext.WebExt"/>
            <xsd:element name="application-client-bnd" type="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"/>
            <xsd:element name="web-bnd" type="com.ibm.ws.javaee.dd.webbnd.WebBnd"/>
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"/>
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"/>
        </xsd:choice>
        <xsd:attribute name="location" type="location" use="required">
            <xsd:annotation>
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="autoStart" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Automatically start</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="useJandex" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use Jandex</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startAfterRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Start after</ext:label>
                    <ext:reference>application</ext:reference>
                    <ext:reference>webApplication</ext:reference>
                    <ext:reference>enterpriseApplication</ext:reference>
                    <ext:reference>springBootApplication</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="classloaderRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Classloader</ext:label>
                    <ext:reference>classloader</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="contextRoot" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Context root of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Application context root</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.webappcfg-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.app.manager.webappcfg">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.earappcfg">
        <xsd:annotation>
            <xsd:documentation>Defines the properties of an enterprise application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Enterprise Application</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="startAfter" type="com.ibm.ws.app.manager-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start After</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader">
                <xsd:annotation>
                    <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Classloader</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"/>
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"/>
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"/>
            <xsd:element name="web-ext" type="com.ibm.ws.javaee.dd.webext.WebExt"/>
            <xsd:element name="application-client-bnd" type="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"/>
            <xsd:element name="web-bnd" type="com.ibm.ws.javaee.dd.webbnd.WebBnd"/>
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"/>
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"/>
        </xsd:choice>
        <xsd:attribute name="location" type="location" use="required">
            <xsd:annotation>
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="autoStart" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Automatically start</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="useJandex" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use Jandex</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startAfterRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Start after</ext:label>
                    <ext:reference>application</ext:reference>
                    <ext:reference>webApplication</ext:reference>
                    <ext:reference>enterpriseApplication</ext:reference>
                    <ext:reference>springBootApplication</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="classloaderRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Classloader</ext:label>
                    <ext:reference>classloader</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="defaultClientModule" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Default client module of an enterprise application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Default client module</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.earappcfg-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.app.manager.earappcfg">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.session">
        <xsd:annotation>
            <xsd:documentation>Configuration for HTTP session management.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>HTTP Session</ext:label>
                <ext:extraProperties/>
                <ext:groupDecl id="session.tracking.mechanism" label="Session Tracking Mechanism">Specifies a mechanism for HTTP session management.</ext:groupDecl>
                <ext:groupDecl id="invalidation" label="Invalidation">Controls how unused sessions are cleaned up.</ext:groupDecl>
                <ext:groupDecl id="cookies" label="Cookies">Controls how cookies are used.</ext:groupDecl>
                <ext:groupDecl id="url.rewriting" label="URL Rewriting">Controls how URL rewriting is used.</ext:groupDecl>
                <ext:groupDecl id="security" label="Security">Controls how sessions are secured.</ext:groupDecl>
                <ext:groupDecl id="failover" label="Failover">Controls how sessions are passivated and activated between servers.</ext:groupDecl>
                <ext:groupDecl id="advanced" label="Advanced">The default values of these options work for most environments.</ext:groupDecl>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="1000" name="maxInMemorySessionCount" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum number of sessions to maintain in memory for each web module.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum in-memory session count</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="allowOverflow" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Allows the number of sessions in memory to exceed the value of the Max in-memory session count property.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow session overflow</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="sslTrackingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies that session tracking uses Secure Sockets Layer (SSL) information as a session identifier.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable SSL identifier tracking</ext:label>
                    <ext:group id="session.tracking.mechanism"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="cookiesEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies that session tracking uses cookies to carry session identifiers.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable cookies</ext:label>
                    <ext:group id="session.tracking.mechanism"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="urlRewritingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies that the session management facility uses rewritten URLs to carry the session identifiers.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable URL rewriting</ext:label>
                    <ext:group id="session.tracking.mechanism"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="30m" name="invalidationTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Amount of time a session can go unused before it is no longer valid, in seconds if unit of time isn't specified. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Session timeout</ext:label>
                    <ext:group id="invalidation"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="reaperPollInterval" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>The wake-up interval, in seconds, for the process that removes invalid sessions. The minimum value is 30 seconds. If a value less than the minimum is entered, an appropriate value is automatically determined and used. This value overrides the default installation value, which is between 30 and 360 seconds, based off the session timeout value. Because the default session timeout is 30 minutes, the reaper interval is usually between 2 and 3 minutes. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Reaper poll interval</ext:label>
                    <ext:group id="invalidation"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="3" name="forceInvalidationMultiple" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>If your requests normally are not bound by a response time limit, specify 0 to indicate that the session manager should wait indefinitely until a request is complete before attempting to invalidate the session. Otherwise, set this property to a positive integer to delay the invalidation of active sessions. Active timed out sessions will not be invalidated by the first invalidation interval pass, but will be invalidated by the interval pass based on this value. For example, a value of 2 would invalidate an active session on the second invalidation interval pass after the session timeout has expired.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Force invalidation multiple</ext:label>
                    <ext:group id="invalidation"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="JSESSIONID" name="cookieName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A unique name for a session management cookie.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Cookie name</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="cookieDomain" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Domain field of a session tracking cookie.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Cookie domain</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="cookieMaxAge" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum amount of time that a cookie can reside on the client browser. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Cookie maximum age</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="/" name="cookiePath" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A cookie is sent to the URL designated in the path.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Cookie path</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="useContextRootAsCookiePath" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies that the cookie path equals the context root of the web module instead of /</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use context root as cookie path</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="cookieSecure" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies that the session cookies include the secure field.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Restrict cookies to HTTPS sessions</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="cookieHttpOnly" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies that session cookies include the HttpOnly field. Browsers that support the HttpOnly field do not enable cookies to be accessed by client-side scripts. Using the HttpOnly field will help prevent cross-site scripting attacks.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Include HttpOnly field in session cookies</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="Disabled" name="cookieSameSite" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies a SameSite attribute value to use for session cookies.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Include a SameSite attribute in session cookies</ext:label>
                    <ext:group id="cookies"/>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="Disabled">
                                <xsd:annotation>
                                    <xsd:documentation>Do not set a SameSite attribute value on the session cookies</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="Lax">
                                <xsd:annotation>
                                    <xsd:documentation>Set the session cookie SameSite attribute value to Lax</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="None">
                                <xsd:annotation>
                                    <xsd:documentation>Set the session cookie SameSite attribute value to None</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="Strict">
                                <xsd:annotation>
                                    <xsd:documentation>Set the session cookie SameSite attribute value to Strict</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="jsessionid" name="rewriteId" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Use this property to change the key used with URL rewriting.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Rewrite identifier</ext:label>
                    <ext:group id="url.rewriting"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="protocolSwitchRewritingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Adds the session identifier to a URL when the URL requires a switch from HTTP to HTTPS or from HTTPS to HTTP.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable protocol switch rewriting</ext:label>
                    <ext:group id="url.rewriting"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="alwaysEncodeUrl" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>The Servlet 2.5 specification specifies to not encode the URL on a response.encodeURL call if it is not necessary. To support backward compatibility when URL encoding is enabled, set this property to true to call the encodeURL method. The URL is always encoded, even if the browser supports cookies.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Always encode URL</ext:label>
                    <ext:group id="url.rewriting"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="securityIntegrationEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables security integration, which causes the session management facility to associate the identity of users with their HTTP sessions.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Associate identity of users with HTTP sessions</ext:label>
                    <ext:group id="security"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="securityUserIgnoreCase" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates that the session security identity and the client security identity should be considered a match even if their cases are different. For example, when this property is set to true, the session security identity USER1 matches the client security identities User1 and user1.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Security user ignore case</ext:label>
                    <ext:group id="security"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="invalidateOnUnauthorizedSessionRequestException" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Set this property to true if, in response to an unauthorized request, you want the session manager to invalidate a session instead of issuing an UnauthorizedSessionRequestException. When a session is invalidated, the requester can create a new session, but does not have access to any of the previously saved session data. This allows a single user to continue processing requests to other applications after a logout while still protecting session data.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Invalidate sessions requested by invalid users</ext:label>
                    <ext:group id="security"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cloneId" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The clone identifier of the cluster member. Within a cluster, this identifier must be unique to maintain session affinity. When set, this name overwrites the default name generated by the server.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Clone identifier</ext:label>
                    <ext:group id="failover"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default=":" name="cloneSeparator" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The single character used to separate the session identifier from the clone identifier in session cookies. The default value should usually be used. On some Wireless Application Protocol (WAP) devices, a colon (:) is not allowed, so a plus sign (+) should be used instead. Different values should rarely be used. You should understand the clone character requirements of other products running on your system before using this property to change the clone separator character. The fact that any character can be specified as the value for this property does not imply that the character you specify will function correctly. This fact also does not imply that IBM is responsible for fixing any problem that might arise from using an alternative character.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Clone separator</ext:label>
                    <ext:group id="failover"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="23" name="idLength" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Length of the session identifier.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Session identifier length</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="idReuse" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>In a multi-JVM environment that is not configured for session persistence, setting this property to "true" enables the session manager to use the same session information for all of a user's requests even if the web applications that are handling these requests are governed by different JVMs. The default value for this property is false. Set this property to true if you want to enable the session manager to use the session identifier sent from a browser to preserve session data across web applications that are running in an environment that is not configured for session persistence.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Reuse identifier</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="noAdditionalInfo" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Forces removal of information that is not needed in session identifiers.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>No additional info</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="debugCrossover" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enable this option to perform additional checks to verify that only the session associated with the request is accessed or referenced, and log messages if any discrepancies are detected. Disable this option to skip the additional checks.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Debug crossover</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="modifyActiveCountOnInvalidatedSession" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Httpsession activeCount metric might become inaccurate when the session is accessed by multiple applications. Set the property to "false" to resolve the issue.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Modify active count on invalidated session</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="allowSerializedAccess" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enable this option to allow serialized access to session data.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow serialized access</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0" name="maxWaitTime" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>The amount of time, in seconds, a servlet waits on a session before it continues execution.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Max wait time</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="accessOnTimeout" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>This property gives the servlet access to the session, which allows normal execution even if the session is still locked by another servlet. Set this property to false to stop the servlet execution when the session requests a timeout. The default value is true.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Access on timeout</ext:label>
                    <ext:group id="advanced"/>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Additional properties related to session management.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Additional properties</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:anyAttribute processContents="skip"/>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.generatePluginConfig">
        <xsd:annotation>
            <xsd:documentation>Properties used when generating the web server plugin configuration file</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Web Server Plugin</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="httpEndpoint" type="com.ibm.ws.http">
                <xsd:annotation>
                    <xsd:documentation>Specify the identifier of the http endpoint to include in the generated plugin-cfg.xml file. The endpoint defines the server in the cluster. The default value is 'defaultHttpEndpoint'.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Http Endpoint</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="extraConfigProperties" type="com.ibm.ws.generatePluginConfig.properties">
                <xsd:annotation>
                    <xsd:documentation>Additional properties to be added to the Config element in the generated plug-in configuration file. These properties can be specified by IBM support to modify behavior of the web server plug-in. For more information, see https://www.ibm.com/support/knowledgecenter/en/SSAW57_9.0.0/com.ibm.websphere.nd.multiplatform.doc/ae/rwsv_plugin_propstable.html</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Additional Properties</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute default="/opt/IBM/WebSphere/Plugins" name="pluginInstallRoot" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web server plugin installation location in file system of web server host</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Plugin install location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="webserver1" name="webserverName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of the web server where this configuration will be used. Used to generate the plugin log file location if that is not specified explicitly by Log file name or directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Web server name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="80" name="webserverPort" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web server HTTP port</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Web server HTTP port</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="-1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="443" name="webserverSecurePort" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web server HTTPS port</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Web server HTTPS port</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="-1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="${pluginInstallRoot}/config/${webserverName}/plugin-key.kdb" name="sslKeyringLocation" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The fully qualified path to the SSL keyring file on the web server host</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location of SSL keyring</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="${pluginInstallRoot}/config/${webserverName}/plugin-key.sth" name="sslStashfileLocation" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>The fully qualified path to the SSL stashfile on the web server host</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location of SSL stashfile</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="sslCertlabel" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the label of the certificate within the keyring that the plug-in is to use when the web container requests a client certificate from the plug-in. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>SSL cert label</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="ipv6Preferred" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Used when resolving an application server host name of {null} or {0}, to prefer the type of address when possible</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>IPv6 is preferred</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="defaultHttpEndpoint" name="httpEndpointRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specify the identifier of the http endpoint to include in the generated plugin-cfg.xml file. The endpoint defines the server in the cluster. The default value is 'defaultHttpEndpoint'.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Http endpoint</ext:label>
                    <ext:reference>httpEndpoint</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="5s" name="connectTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Identifies the maximum amount of time that the application server should maintain a connection with the web server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Connection timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="900s" name="serverIOTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Identifies the maximum amount of time that the web server plugin waits to send a request or receive a response from the application server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use read/write timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="wsServerIOTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Identifies the maximum amount of time that the web server plugin waits to send a request or receive a websocket response from the application server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use read/write timeout for websockets</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="wsServerIdleTimeout" type="secondDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>Identifies the maximum amount of time that the web server plugin waits to terminate an idle websocket connection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Websocket idle connection timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="waitForContinue" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>If false (the default value), the web server plugin sends the "Expect: 100-continue" header with HTTP requests that have a message body. When set to true, the web server plugin sends the "Expect: 100-continue" header with every HTTP request. Consider setting this value to true if you have a firewall between the web server and the application server, and are sensitive to requests retries with no request body.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Always use "Expect: 100-continue" headers</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="logFileName" type="fileLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>A fully qualified path to to the web server plug-in log file. Directory component must already exist.  For Apache-based web servers, a path that begins with a pipe character is interpreted as an external piped logger.  If specified, the path overrides logDirLocation.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Log file name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="${pluginInstallRoot}/logs/${webserverName}" name="logDirLocation" type="dirLocation" use="optional">
            <xsd:annotation>
                <xsd:documentation>Deprecated: Identifies the directory where the http_plugin.log file is located. See Log file name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Directory of the http_plugin.log file</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="-1" name="serverIOTimeoutRetry" use="optional">
            <xsd:annotation>
                <xsd:documentation>Limits the number of request retries after a read or write timeout. The default value, {-1}, applies no additional limits, so retries are limited by the number of available servers in the cluster.  A {0} value indicates there should be no retries. This value is scoped to the server cluster and does not apply to connection failures or timeouts due to the HTTP plug-in Connection timeout, or to web socket timeouts.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Maximum retries after read or write timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:int">
                            <xsd:minInclusive value="-1"/>
                            <xsd:maxInclusive value="65535"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="20" name="loadBalanceWeight" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>This value is dynamically changed during run time. The weight of a server is lowered each time a request is assigned to that server. When all weights for all servers drop to 0 or a lesser value, the web server plug-in readjusts all the weights so that they are greater than 0.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Starting weight of the server</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="PRIMARY" name="serverRole" use="optional">
            <xsd:annotation>
                <xsd:documentation>The server role identifies a server as primary or backup. When primary servers are available, the web server plug-in uses them for load balance and failover. However, if none of the primary servers are available, the web server plug-in uses only backup servers for load balance and failover.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Designation of the server role</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="PRIMARY">
                                <xsd:annotation>
                                    <xsd:documentation>Primary</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="BACKUP">
                                <xsd:annotation>
                                    <xsd:documentation>Backup</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="true" name="ESIEnable" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>ESIEnable property enables Edge Side Include processing to cache the responses. This property provides the option to disable ESI in the web server plugin configuration file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Override the ESIEnable property</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="1024" name="ESIMaxCacheSize" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>ESIMaxCacheSize is the maximum size of the cache which defaults to 1MB. This property provides the option to override the value in the web server plugin configuration file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Override the ESIMaxCacheSize property</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="ESIInvalidationMonitor" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>ESIInvalidationMonitor specifies if the ESI processor should receive invalidations from the application server. This property provides the option to override the value in the web server plugin configuration file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Override the ESIInvalidationMonitor property</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="ESIEnableToPassCookies" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>ESIEnableToPassCookies allows forwarding of session cookies to WebSphere Application Server. This property provides the option to override the value in the web server plugin configuration file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Override the ESIEnableToPassCookies property</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="trustedProxyEnable" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables trusted proxies to be used. When specified, this property overrides the value in the web server plug-in configuration file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Override the TrustedProxyEnable property</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="trustedProxyGroup" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of trusted proxies. When specified, this property overrides the value in the web server plug-in configuration file.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Override the TrustedProxyGroup property</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="ignoreAffinityRequests" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates whether the webserver plug-in ignores affinity requests when it is tracking runtime weight for round-robin load balancing.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Ignore affinity requests</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.webcontainer">
        <xsd:annotation>
            <xsd:documentation>Configuration for the web container.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Web Container</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute default="" name="listeners" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma separated list of listener classes.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Listeners</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="decodeUrlAsUtf8" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Decode URLs using an encoding setting of UTF-8.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Decode URLs using UTF-8 encoding</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="fileServingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enable file serving if this setting was not explicitly specified for the application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable file serving</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="disallowAllFileServing" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Disables all file serving by applications. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.disallowAllFileServing.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Disallow all file serving</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="directoryBrowsingEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enable directory browsing of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable directory browsing</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="serveServletsByClassnameEnabled" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enable servlets to be accessed in a web application using a class name if not explicitly specified.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Serve servlets by class name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="disallowServeServletsByClassName" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Disallows the use of serveServletsByClassnameEnabled on the application server level. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.disallowserveservletsbyclassname.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Disallow serve servlet by class name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="doNotServeByClassName" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A semi-colon delimited list of classes to be completely disallowed from being served by classname. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.donotservebyclassname.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Do not serve by class name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="httpsIndicatorHeader" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>For SSL offloading, set to the name of the HTTP header variable inserted by the SSL accelerator/proxy/load balancer.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>HTTPS indicator header</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="exposeWebInfOnDispatch" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is set to true, a servlet can access static files in the WEB-INF directory. When this property is set to false, which is the default, a servlet cannot access static files in the WEB-INF directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Expose web info on dispatch</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="decodeUrlPlusSign" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Decode the plus sign when it is part of the URL. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.decodeurlplussign. For servlet-5.0 and newer Servlet features, the default value is false.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Decode url plus sign</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="fileWrapperEvents" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web container will generate SMF and PMI data when  serving the static files. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.fileWrapperEvents.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>File wrapper events</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="defaultTraceRequestBehavior" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Restore HTTP TRACE processing. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.DefaultTraceRequestBehavior.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow the HTTP TRACE request method to be invoked</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="defaultHeadRequestBehavior" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Restore the behavior where the HEAD request is not subject to the security constraint defined for the GET method. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.DefaultHeadRequestBehavior.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow the HTTP HEAD request method to be invoked</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="tolerateSymbolicLinks" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables the web container to support the use of  symbolic links. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.TolerateSymbolicLinks.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Tolerate symbolic links</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="1000" name="symbolicLinksCacheSize" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Initial size of the symbolic link cache. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.SymbolicLinksCacheSize.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Symbolic link cache size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="enableErrorExceptionTypeFirst" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web container is updated to search and use the exception-type before the error-code. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.enableErrorExceptionTypeFirst.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable error exception type first</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="enableMultiReadOfPostData" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Retain post data for multiple read accesses. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.enablemultireadofpostdata.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Enable multiple reads of post data</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="copyAttributesKeySet" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web container will return an enumeration of a copy of the list of attributes to the servlet to avoid a concurrent access error by the servlet. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.copyattributeskeyset.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Copy the request attributes list</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="dispatcherRethrowsEr" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web container will re-throw errors allowing interested resources to process them. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.dispatcherRethrowser.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Rethrow error</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="ignoreSessiononStaticFileRequest" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Improves performance by preventing the web container from accessing a session for static file requests involving filters. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.IgnoreSessiononStaticFileRequest.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Ignore session for static file requests</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="invokeFilterInitAtStartup" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web container will call the filter's init() method at application startup. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.invokeFilterInitAtStartup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Invoke filter init at startup</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="enableJspMappingOverride" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Allow the JSP mapping to be overridden so that the application can serve the JSP contents itself. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.enablejspmappingoverride.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>JSP mapping override</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="enableDefaultIsElIgnoredInTag" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Always evaluate whether to ignore EL expressions in tag files. If parent JSP files have different isELIgnored settings, the setting will be re-evaluated in the tag file. The equivalent custom property in the full profile application server is com.ibm.ws.jsp.enabledefaultiselignoredintag.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Evaluate isELIgnored behavior in JSP tag files</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="parseUtf8PostData" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Web container will detect non URL encoded UTF-8 post data and include it in the parameter values. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.parseutf8postdata.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Parse UTF-8 post data</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="logServletContainerInitializerClassLoadingErrors" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Log servlet container class loading errors as warnings rather than logging them only when debug is enabled. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.logservletcontainerinitializerclassloadingerrors.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Warn on ServletContainerIntializer errors</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="allowIncludeSendError" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Allow RequestDispatch to send errors on Include methods. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.allowincludesenderror.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow include send errors</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="skipMetaInfResourcesProcessing" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Do not search the meta-inf directory for application resources. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.skipmetainfresourcesprocessing.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Skip meta-inf resources processing</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="20" name="metaInfResourcesCacheSize" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Initial size (number of entries) of the meta-inf resource cache. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.metainfresourcescachesize.name.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Meta-inf resources cache size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="xPoweredBy" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Alternative string for the X-Powered-By header setting. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.xpoweredby. There is no default value for this property. If the property is not set, the value of the X-Powered-By header is set to Servlet/&lt;servlet spec version&gt;, as defined by the Servlet specification.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>X-Powered-By</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="disableXPoweredBy" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is set to true,  the X-Powered-By header is not set. In servlet-5.0 and later, the default value is true. In servlet-4.0 and earlier, the X-Powered-By header is set by default. This property is configurable only in servlet-5.0 and earlier. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.disablexpoweredby.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Disable the X-Powered-By header</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="deferServletLoad" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defer servlet loading from application server startup.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Defer servlet load</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="5000" name="asyncMaxSizeTaskPool" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum size of tasks in the Async task pool before automatically purging canceled tasks. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asyncmaxsizetaskpool.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Async servlet maximum pool size</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="30000" name="asyncPurgeInterval" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Time interval to wait between each required purge of the cancelled task pool. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asyncpurgeinterval.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Async servlet purge interval</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="30000" name="asyncTimeoutDefault" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Async servlet timeout value used when a timeout value has not been explcitly specified. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asynctimeoutdefault.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Default async timeout</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="2" name="asyncTimerThreads" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Maximum number of threads to use for async servlet timeout processing. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asynctimerthreads.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Async timer threads</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="setContentLengthOnClose" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle to set content length when an application explicitly closes the response. The default value is true; however, set this value to false if an application response contains double-byte characters.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Set content length on close</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="emptyServletMappings" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle if you want to return an empty collection, instead of null, when no servlet mappings are added. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.emptyservletmappings.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Return empty servlet mappings</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="deferServletRequestListenerDestroyOnError" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle if you want to defer ServletRequestListener destroy when there is an error serving the request. The default value is false, but is true for servlet 5.0 and later. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.deferServletRequestListenerDestroyOnError.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Defer servlet request listener destroy</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="allowExpressionFactoryPerApp" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle to load the ExpressionFactory that is set by the application. Enable this custom property if you are using a custom EL implementation (for example, JUEL) that needs to set its own ExpressionFactory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow expression factory per application</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="ignoreSemiColonOnRedirectToWelcomePage" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle to ignore the trailing semicolon when redirecting to the welcome page. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.ignoreSemiColonOnRedirectToWelcomePage.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Ignore semicolon on redirect to welcome page</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="useSemiColonAsDelimiterInURI" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Toggle to use the semicolon as a delimiter in the request URI. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.useSemiColonAsDelimiterInURI. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Use semicolon as delimiter in URI</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="60" name="servletDestroyWaitTime" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Wait time in seconds for an active request to complete when the owning application is stopped. The default value is 60 seconds. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.servletDestroyWaitTime.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Wait for an active request to complete</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="servletPathForDefaultMapping" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Set the servlet path value to the request URI minus the context path. The path information is null when a servlet is used as a default mapping. The default value is true for version 4.0 or later of the servlet feature. It is false for other servlet features. When mapping is to the /* pattern, the servlet path is empty and the path information starts with a leading slash (/).</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Set the servlet path value for a default mapping</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="throwExceptionWhenUnableToCompleteOrDispatch" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Throw an illegal state exception when an asynchronous request cannot be completed or dispatched. The default is true. If the asynchronous request must complete or the dispatch method must return, even if the call does not succeed, set the property to false.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Throw exception for not complete or dispatch asyn</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="getRealPathReturnsQualifiedPath" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Return non-null paths from the ServletContext.getRealPath(String) method, even if no resource exists at the given path. The default is true. If applications expect the getRealPath method to return null when given a path for which no resource exists, set the property to false.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Always return a non-null path from getRealPath</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="stopAppStartUponListenerException" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Some web applications depend on context listeners for setup before the web application starts. When this property is set to true, the application stops starting up when an unhandled exception is thrown from the context listeners. For servlet-5.0 and newer Servlet features, the default value is true. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Stop application for unhandled listener exception</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="redirectToRelativeUrl" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Send redirect response to a relative URL location without processing it. Set this property to true to send redirect response without converting the URL to an absolute location. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Send redirect response to a relative URL location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="" name="addStrictTransportSecurityHeader" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Enables the HTTP Strict Transport Security (HSTS) header for HTTPS responses and allows a value to be set for that header, for example: "max-age=31536000;includeSubDomains". HSTS can also be configured in the web.xml file by setting the "com.ibm.ws.webcontainer.ADD_STS_HEADER_WEBAPP" context parameter.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Add the HTTP strict transport security header</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="allowQueryParamWithNoEqual" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is set to true, if the query parameter in a URL contains only the string name, the server returns an empty string as the value for the request.getParameter(name) query. When this property is set to false, the server returns null as the value for the request.getParameter(name) query. The default value is false, but is true for servlet 5.0 and higher.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow query parameters with no value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="setHtmlContentTypeOnError" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is false, the webcontainer will not set the response's content type header during the error handling process. An application is responsible to set the response's content type. The default value (true) sets the content type to "text/html".</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Disable text/html content type on error responses</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="excludeAllHandledTypesClasses" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is set to true, during startup, ServletContainerInitializer implementors that use the HandlesTypes annotation do not receive classes that are specified as HandlesTypes parameters.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Disable returning handlesTypes parameters</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="skipEncodedCharVerification" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>A request is rejected if the request URI contains the %23, %2E, %2F, or %5C encoded characters. When this property is set to true, the request URI is not checked for these encoded characters. This property is available starting in servlet 6.0, and default value is false.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Skip verification of encoded characters in URI</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="5000" name="maxFileCount" type="intType" use="optional">
            <xsd:annotation>
                <xsd:documentation>The maximum number of files that can be uploaded by a multipart/form-data request. The default value is 5000. For unlimited file upload, set the value to -1.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>The maximum uploaded files in a single request</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="set400SCOnTooManyParentDirs" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is set to true, a request with an invalid path traversal is returned with a 400 status code instead of 500. The default is false. You can use this property with servlet-5.0 and earlier. For servlet-6.0 and later, the 400 response code is returned by default and this property has no effect.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Set 400 for invalid path traversal request</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="donotCloseOutputOnForwardForServletError" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>When this property is set to true, if a servlet called from dispatch forward throws an exception other than IOException and ServletException, the output is not automatically closed.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Do not close output on forwarded servlet error</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.generatePluginConfig.properties">
        <xsd:annotation>
            <xsd:documentation>Additional properties to be added to the Config element in the generated plug-in configuration file. These properties can be specified by IBM support to modify behavior of the web server plug-in. For more information, see https://www.ibm.com/support/knowledgecenter/en/SSAW57_9.0.0/com.ibm.websphere.nd.multiplatform.doc/ae/rwsv_plugin_propstable.html</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Additional Properties</ext:label>
                <ext:extraProperties/>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional">
            <xsd:annotation>
                <xsd:documentation>[extraProperties.com.ibm.ws.generatePluginConfig.properties.description, extraProperties.description]</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Additional properties</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:anyAttribute processContents="skip"/>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.generatePluginConfig.properties-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.generatePluginConfig.properties">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.webcontainer.cors">
        <xsd:annotation>
            <xsd:documentation>Configuration for the Cross-Origin Resource Sharing (CORS).</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Cross-Origin Resource Sharing</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <!--Idiom for "empty element context" (whitespace accepted and ignored)-->
        <xsd:sequence>
            <xsd:sequence/>
        </xsd:sequence>
        <xsd:attribute name="domain" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The domain name represents the URL being setup with these CORS settings.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Domain name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="null" name="allowedOrigins" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of origins that are allowed to access the configured domain. If this is set to "*", it indicates the resource is publicly accessible, with no access control checks. Also, the value of "null" indicates the domain must not be accessible.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allowed origins</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="allowedMethods" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of HTTP methods allowed to be used by the origin domain when making requests to the configured domain.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allowed methods</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="allowedHeaders" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of HTTP headers that are allowed to be used by the origin domain when making requests to the configured domain. If this is set to "*", it indicates the request can include any HTTP headers.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allowed headers</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="exposeHeaders" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>A comma-separated list of HTTP headers that are safe to expose to the calling API.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Expose headers</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="maxAge" type="longType" use="optional">
            <xsd:annotation>
                <xsd:documentation>A long that indicates how many seconds a response to a preflight request can be cached in the browser.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Max age</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="allowCredentials" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>A boolean that indicates if the user credentials can be included in the request.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Allow credentials</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.webcontainer.cors-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.webcontainer.cors">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.springappcfg">
        <xsd:annotation>
            <xsd:documentation>Defines the properties of a Spring Boot application.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Spring Boot Application</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="startAfter" type="com.ibm.ws.app.manager-factory">
                <xsd:annotation>
                    <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Start After</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader">
                <xsd:annotation>
                    <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Classloader</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="applicationArgument" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Defines an application argument which is passed to the main method of the start class for a Spring Boot application.</xsd:documentation>
                    <xsd:appinfo>
                        <ext:label>Application argument</ext:label>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
        <xsd:attribute name="location" type="location" use="required">
            <xsd:annotation>
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="name" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>Name of an application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="autoStart" type="booleanType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Automatically start</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startAfterRef" type="pidListType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies applications that are required to start before this application can begin starting. </xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Start after</ext:label>
                    <ext:reference>application</ext:reference>
                    <ext:reference>webApplication</ext:reference>
                    <ext:reference>enterpriseApplication</ext:reference>
                    <ext:reference>springBootApplication</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="classloaderRef" type="pidType" use="optional">
            <xsd:annotation>
                <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Classloader</ext:label>
                    <ext:reference>classloader</ext:reference>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="com.ibm.ws.app.manager.springappcfg-factory">
        <xsd:complexContent>
            <xsd:extension base="com.ibm.ws.app.manager.springappcfg">
                <xsd:attribute name="id" type="factoryIdType" use="optional">
                    <xsd:annotation>
                        <xsd:documentation>A unique configuration ID.</xsd:documentation>
                        <xsd:appinfo>
                            <ext:label>ID</ext:label>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:simpleType name="variableType">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value=".*$\{[^\s\}]*\}.*"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="location">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="booleanType">
        <xsd:union memberTypes="xsd:boolean variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="secondDuration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="dirLocation">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="duration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="multiplePidType">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[^, ]+(\s*,\s*[^, ]+)*"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="pidListType">
        <xsd:union memberTypes="multiplePidType variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="singlePidType">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[^, ]+"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="pidType">
        <xsd:union memberTypes="singlePidType variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="hourDuration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="intType">
        <xsd:union memberTypes="xsd:int variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="fileLocation">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="minuteDuration">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="longType">
        <xsd:union memberTypes="xsd:long variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="password">
        <xsd:union memberTypes="xsd:string variableType"/>
    </xsd:simpleType>
    <xsd:simpleType name="factoryIdType">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:simpleType name="internalPropertiesType">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:simpleType name="schemaPropertiesType">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:complexType name="includeType">
        <xsd:annotation>
            <xsd:documentation>Specify a configuration resource to include in the server's configuration.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Include</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:attribute default="false" name="optional" type="xsd:boolean" use="optional">
            <xsd:annotation>
                <xsd:documentation>Allow the included resource to be skipped if it cannot be found.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Resource is optional</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="location" type="location" use="required">
            <xsd:annotation>
                <xsd:documentation>Specifies the resource location. The value can be a file path, a directory, or a URI for a remote resource.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Location</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="MERGE" name="onConflict" use="optional">
            <xsd:annotation>
                <xsd:documentation>Specifies the behavior that is used to merge elements when conflicts are found.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>On conflict</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="variableType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="MERGE">
                                <xsd:annotation>
                                    <xsd:documentation>Conflicting elements will be merged together.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="REPLACE">
                                <xsd:annotation>
                                    <xsd:documentation>When elements conflict, the element from the included file will replace the conflicting element.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                            <xsd:enumeration value="IGNORE">
                                <xsd:annotation>
                                    <xsd:documentation>Conflicting elements in the included file will be ignored.</xsd:documentation>
                                </xsd:annotation>
                            </xsd:enumeration>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="variableDefinitionType">
        <xsd:annotation>
            <xsd:documentation>Declare a new variable by specifying the name and value for the variable.</xsd:documentation>
            <xsd:appinfo>
                <ext:label>Variable Declaration</ext:label>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>The name of the variable.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Name</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="value" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>The value to be assigned to the variable.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="defaultValue" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>The defaultValue to be assigned to the variable if no value is available.</xsd:documentation>
                <xsd:appinfo>
                    <ext:label>Default value</ext:label>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="serverType">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
            <xsd:element name="include" type="includeType"/>
            <xsd:element name="variable" type="variableDefinitionType"/>
            <xsd:element name="applicationManager" type="com.ibm.ws.app.management"/>
            <xsd:element name="applicationMonitor" type="com.ibm.ws.app.manager.monitor"/>
            <xsd:element name="application" type="com.ibm.ws.app.manager-factory"/>
            <xsd:element name="classloading" type="com.ibm.ws.classloading.global"/>
            <xsd:element name="channelfw" type="com.ibm.ws.channelfw"/>
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options-factory"/>
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader-factory"/>
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary-factory"/>
            <xsd:element name="mimeTypes" type="com.ibm.ws.http.mimetype"/>
            <xsd:element name="httpDispatcher" type="com.ibm.ws.http.dispatcher"/>
            <xsd:element name="httpEncoding" type="com.ibm.ws.transport.http.encoding"/>
            <xsd:element name="httpAccessLogging" type="com.ibm.ws.http.log.access-factory"/>
            <xsd:element name="headers" type="com.ibm.ws.http.headers-factory"/>
            <xsd:element name="httpProxyRedirect" type="com.ibm.ws.http.proxyredirect-factory"/>
            <xsd:element name="samesite" type="com.ibm.ws.http.samesite-factory"/>
            <xsd:element name="compression" type="com.ibm.ws.http.compression-factory"/>
            <xsd:element name="httpEndpoint" type="com.ibm.ws.http-factory"/>
            <xsd:element name="httpOptions" type="com.ibm.ws.http.options-factory"/>
            <xsd:element name="remoteIp" type="com.ibm.ws.http.remoteip-factory"/>
            <xsd:element name="virtualHost" type="com.ibm.ws.http.virtualhost-factory"/>
            <xsd:element name="javaPermission" type="com.ibm.ws.security.java2sec.policyConfig-factory"/>
            <xsd:element name="config" type="com.ibm.ws.config"/>
            <xsd:element name="fileset" type="com.ibm.ws.kernel.metatype.helper.fileset-factory"/>
            <xsd:element name="executor" type="com.ibm.ws.threading"/>
            <xsd:element name="featureManager" type="com.ibm.ws.kernel.feature"/>
            <xsd:element name="logging" type="com.ibm.ws.logging"/>
            <xsd:element name="webApplication" type="com.ibm.ws.app.manager.webappcfg-factory"/>
            <xsd:element name="enterpriseApplication" type="com.ibm.ws.app.manager.earappcfg-factory"/>
            <xsd:element name="httpSession" type="com.ibm.ws.session"/>
            <xsd:element name="pluginConfiguration" type="com.ibm.ws.generatePluginConfig"/>
            <xsd:element name="webContainer" type="com.ibm.ws.webcontainer"/>
            <xsd:element name="cors" type="com.ibm.ws.webcontainer.cors-factory"/>
            <xsd:element name="springBootApplication" type="com.ibm.ws.app.manager.springappcfg-factory"/>
        </xsd:choice>
        <xsd:attribute name="description" type="xsd:string" use="optional"/>
    </xsd:complexType>
    <xsd:element name="client" type="serverType"/>
    <xsd:element name="server" type="serverType"/>
</xsd:schema>
